{"swagger":"2.0","info":{"title":"Crossref REST API","version":"3.40.4","description":"Jump to a section:\n- <a href=\"#introduction\">Introduction<\/a>\n- <a href=\"#contents\">Contents of the API<\/a>\n    - <a href=\"#data\">Data sources<\/a>\n    - <a href=\"#request-types\">Request types<\/a>\n    - <a href=\"#result-types\">Response types<\/a>\n    - <a href=\"#content-negotiation\">Content negotiation<\/a>\n- <a href=\"#uses\">How to use the API<\/a>\n    - <a href=\"#best-practice\">Best practice<\/a>\n    - <a href=\"#access\">Access and pools<\/a>\n    - <a href=\"#limits\">Request limits<\/a>\n    - <a href=\"#cursors\">Large response sets<\/a>\n- <a href=\"#libraries\">Code libraries<\/a>\n- <a href=\"#status\">Current status and errors<\/a>\n- <a href=\"#try-it-out\">Try it out<\/a>\n\n\n## Introduction<a name='introduction'><\/a>\n\nWelcome to the Crossref REST API documentation. This is one of several ways to access our metadata. See [our website documentation](https:\/\/www.crossref.org\/documentation\/retrieve-metadata\/) for other options. \n\nTo get started quickly, see the <a href=\"#try-it-out\">try it out<\/a> sections below. To learn more about how to use our APIs, visit the [learning hub](https:\/\/www.crossref.org\/learning\/), or see  [tips for using our APIs](https:\/\/www.crossref.org\/documentation\/retrieve-metadata\/rest-api\/tips-for-using-the-crossref-rest-api\/). \n\n## Contents of the API<a name='contents'><\/a>\n\n### Data sources<a name='data'><\/a>\n\nThe REST API returns metadata records about scholarly objects, including publications, grants, and journals. The metadata has several sources:\n\n1. **Crossref members**: We are a community of organisations that operate in scholarly research and scholarly communications. Members deposit metadata, including registering a DOI for each item and its resolution URL. Alongside the DOI, they deposit information such as the title, authors, and references.\n\n1. **Matching processes**: We seek to identify links between deposited metadata and existing metadata records. When a match is found, an identifier is added to the linked records. For example, if a reference is deposited without a DOI and we attempt to match its metadata to a Crossref record.\n\n1. **Trusted third party sources**: We work with selected third party sources, such as Retraction Watch, to add additional metadata to records. \n\nWe don\u2019t scrape websites or pull data from other aggregators to fill in gaps in the metadata. Not all Crossref members provide all metadata elements, so the amount of information in records varies.\n\nWe also don\u2019t collect or provide full-text of records, however you can find the landing page of each record in the works endpoint via links in the `resolution` field.\n\nMetadata typically appears in the REST API within 20 minutes of deposit by a member. Summarising information (such as citation counts) are calculated once per day.\n\nAlmost all of the metadata we hold is reusable without restriction, with the exception of abstracts, which are subject to publisher or author copyright. See the [REST API license information](https:\/\/www.crossref.org\/documentation\/retrieve-metadata\/rest-api\/rest-api-metadata-license-information\/) for a more detailed discussion. We also have a [privacy policy](https:\/\/www.crossref.org\/operations-and-sustainability\/privacy\/).\n\nSome metadata records have been aliased, meaning that the DOI will always resolve to a different one (the prime DOI). In this case, querying for an aliased record will be redirected to the prime record. Aliased DOIs are also excluded from lists. If a DOI has aliases, these are given in the `alias` field.\n\nCrossref is not the only DOI registration agency, a full list of [registration agencies](https:\/\/www.doi.org\/the-community\/existing-registration-agencies\/) can be found on the DOI foundation website. DOIs from other agencies are not included in our REST API and will return a 404 status. You can determine the registration agency for a DOI or its prefix using the DOI foundation API, e.g. https:\/\/doi.org\/ra\/10.3390.\n\n### Endpoints\n\nThe REST API provides a number of endpoints. For details of the metadata and options available in each endpoint, see <a href=\"#try-it-out\">below<\/a>. The following are currently provided:\n\n- Works: scholarly works that have a DOI registered with Crossref.\n- Prefixes: details about DOI prefixes, including works registered using each prefix.\n- Members: past and present organisations that have registered works.\n- Funders: funder registry DOIs.\n- Journals: summary statistics of items registered in journals and other serials.\n- Licenses: counts of works registered with specific licenses.\n- Types: works registered of a specific type (for example `book`, or `journal-article`)\n\n### Request types<a name=\"request-types\"><\/a>\n\nFull details of parameters for each endpoint are given <a href=\"#try-it-out\">below<\/a>. The primary ways the Crossref REST API is used are as follows:\n\n**Get a list of all items**. Returns the first page of items in the endpoint, e.g.\nhttps:\/\/api.crossref.org\/works\n\n**Return an individual record** specified by its identifier, e.g.\nhttps:\/\/api.crossref.org\/works\/10.5555%2F12345678\n\n**Get a filtered list of items** (available on some endpoints). Returns records where specified fields have a certain value or property, e.g.\nhttps:\/\/api.crossref.org\/v1\/funders?filter=location:Switzerland\n\n**Make basic metadata queries** (available on some endpoints). Return records where one or more fields has a given query term or terms inside it. Note that the results are not sorted by relevance. See e.g.\nhttps:\/\/api.crossref.org\/v1\/members?query=association+library\n\n**Get summary statistics** using a facet parameter (`works` endpoint only). Returns a list of field values and how many records have that value. Use `:*` to get a maximum of 1000 values or specify an integer (such as `:10`) to get the most popular values e.g.\nhttps:\/\/api.crossref.org\/v1\/works?filter=from-pub-date:2020-01-10,until-pub-date:2020-01-10&facet=type-name:10. The counts returned by facets (and in the `total-results` field) are approximations and may differ a small amount from the exact record count, however they are reliable enough for most purposes.\n\n### Response types<a name='result-types'><\/a>\n\nAll responses are in JSON format. The mime-type for API results is `application\/vnd.crossref-api-message+json`. If you access the API via a browser, we recommend using a JSON formatter plugin.\n\nThere are three types of responses:\n\n**Singleton**: the metadata record of a single object. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) returns a singleton. For example: \n\nhttps:\/\/api.crossref.org\/works\/10.5555%2F12345678\n\n**Headers only**: you can use HTTP HEAD requests to quickly determine existence of a singleton, which is very fast because it does not return any metadata. It only returns headers and an HTTP status code (200=exists, 404=does not exist). For example (in a terminal):\n\n`curl --head \"https:\/\/api.crossref.org\/members\/98\"`\n\n**List**: responses can contain multiple entries. Requests with queries or filters returns a list. You can specify the maximum number of items returned in the list using the `rows` parameter, which can be set to 0 to retrieve only summary information. For example:\n\nhttps:\/\/api.crossref.org\/funders?rows=5\n\n### Content negotiation<a name='content-negotiation'><\/a>\n\nContent negotiation allows requests for single records to specify the format of the response. The format is included in the `Accept` field of the request header. `style` and `locale` headers are also available for some formats.\n\nRead more about content negotiation, including a list of available formats <a href='https:\/\/www.crossref.org\/documentation\/retrieve-metadata\/content-negotiation\/'>in our user documentation<\/a>.\n\n## How to use the API<a name='uses'><\/a> \n\n### Best practice<a name='best-practice'><\/a>\n\nBy using our REST API, you are part of our community that supports open access to scholarly metadata. We ask that you are considerate of other users and don't take actions that will make the API unstable, and hence unusable for others. You can do this by:\n\n - Caching responses so you don't make the same requests over and over. Be considerate about the frequency with which you refresh your cache.\n  - Use the `mailto` parameter and specify a `User-Agent` header that identifies you and your script.\n - Handle HTML response codes and monitor response times. Back off if the response times start to increase.\n\n### Access and pools<a name='access'><\/a>\n\nThe data we provide is public and available anonymously without authentication. This is part of our mission and we are committed to providing the data in this way, however there are advantages to identifying yourself. \n\nRequests are served by one of three different pools, depending on the level of identification and authentication:\n\n - **Public:** no authentication or user identification.\n - **Polite:** provide an email address in the `mailto` parameter of your request. This means that we can contact you in case there is an issue rather than blocking you directly.\n - **Plus subscriber:** For users who integrate our API into a production tool, we offer [a premium service](https:\/\/www.crossref.org\/documentation\/metadata-plus\/) with higher rate limits, better levels of support, and access to monthly snapshots. Plus subscribers identify themselves via an API key in the request header.\n\n### Request limits<a name='limits'><\/a>\n\nIn order to make the data accessible to all and keep the service stable, we operate limits that apply to individual users. \n\n**Rate limits**: These are included in the results headers under `x-rate-limit-limit` and `x-rate-limit-interval` and depend on the pool accessed by your request. This gives the maximum number of requests you can make in a given time period. The public and polite pools have a rate limit of 50 requests per second, and the Plus pool has a limit of 150 requests per second.\n\n**Concurrent request limits**: Users of the public and polite pools are limited to 5 concurrent requests.\n\nIf you exceed the rate limits, you will receive a 429 response status. In this case, wait a short while and try your request again at a lower rate and\/or with lower concurrency. \n\nRate limits are usually applied and removed automatically. In the rare case that we apply a block manually, we will make an effort to contact you to resolve the issue. For this reason we strongly recommend providing a `mailto` parameter in all requests. \n\n### Large response sets<a name='cursors'><\/a>\n\nEach endpoint has a limit on the number of items returned in a single request. Paginating through multiple pages of results is possible through the `cursor` parameter. \n\nTo retrieve multiple pages, add `cursor=*` to your first request (and `rows` > 0). The response will include a `next-cursor` value. Use this in your next request to obtain the following page of results. Stop sending requests when the number of items in the response is less than the number of `rows` requested.\n\nCursors expire after 5 minutes if not used.\n\n## Code libraries<a name='libraries'><\/a>\n\nThere are a number of libraries that have been written for the Crossref REST API. These are neither maintained nor endorsed by Crossref (except where noted). Available libraries include:\n\n- [crossrefapi](https:\/\/github.com\/caltechlibrary\/crossrefapi) (Go)\n- [pitaya](https:\/\/github.com\/naustica\/Pitaya) (Julia)\n- [crossref-commons](https:\/\/gitlab.com\/crossref\/crossref_commons_py) (Python, developed by Crossref)\n- [habanero](https:\/\/github.com\/sckott\/habanero) (Python)\n- [crossrefapi](https:\/\/github.com\/fabiobatalha\/crossrefapi) (Python)\n- [rcrossref](https:\/\/github.com\/ropensci\/rcrossref) (R)\n- [serrano](https:\/\/github.com\/sckott\/serrano) (Ruby)\n- [crossref-rs](https:\/\/github.com\/MattsSe\/crossref-rs) (rust)\n- [Crossref API Typescript client](https:\/\/www.npmjs.com\/package\/@jamesgopsill\/crossref-client) (Typescript)\n\n## Current status and errors<a name='status'><\/a>\n\nWe record and report service issues on our [status page](http:\/\/status.crossref.org). If you see an issue that is not noted, please contact us via our [community forum](https:\/\/community.crossref.org\/) or directly through our [support team](https:\/\/www.crossref.org\/contact\/).\n\nWe also post notices of any ongoing performance issues with our services on our social media feeds.\n\nThe HTML status returned by successful queries is 200 and we use standard HTML codes to indicate errors (4XX for errors in the request and 5XX for server-side errors). Some records redirect and will return a 301 response, see [Changing or deleting DOIs](https:\/\/www.crossref.org\/documentation\/register-maintain-records\/creating-and-managing-dois\/changing-or-deleting-dois\/).\n\n## Try it out<a name='try-it-out'><\/a>\n","contact":{"name":"Crossref","email":"support@crossref.org","url":"https:\/\/crossref.org"}},"produces":["application\/json"],"consumes":["application\/json"],"tags":[{"name":"Funders","description":"Endpoints that expose funder related data"},{"name":"Journals","description":"Endpoints that expose journal related data"},{"name":"Works","description":"Endpoints that expose works related data"},{"name":"Prefixes","description":"Endpoints that expose prefix related data"},{"name":"Members","description":"Endpoints that expose member related data"},{"name":"Types","description":"Endpoints that expose type related data"},{"name":"Licenses","description":"Endpoints that expose license related data"},{"name":"Deposits","description":"Endpoints that expose deposit related data. *Note* **These endpoints will be deprecated in the near future.**"}],"paths":{"\/members\/{id}\/works":{"get":{"description":"Returns list of works associated with a Crossref member (deposited by a Crossref member) with {id}.\n## Queries\n\nFree form search queries can be made, for example, works that include `renear` or `ontologies` (or both):\n\n##\n\n```\n\/works?query=renear+ontologies\n```\n\n\n## Field Queries\nField queries allow for queries that match only particular fields of metadata. For example, this query matches records that contain the tokens `richard` or `feynman` (or both) in any author field:\n\n##\n\n```\n\/works?query.author=richard+feynman\n```\n\n##\n\nField queries can be combined with the general `query` parameter and each other. Each query parameter is ANDed with the others:\n\n##\n```\n\/works?query.title=room+at+the+bottom&query.author=richard+feynman\n```\n\n##\n\nThis endpoint supports the following field queries:\n\n##\n\n+ `query.affiliation` - query contributor affiliations\n+ `query.author` - query author given and family names\n+ `query.bibliographic` - query bibliographic information, useful for citation look up, includes titles, authors, ISSNs and publication years\n+ `query.chair` - query chair given and family names\n+ `query.container-title` - query\u00a0container title\u00a0aka. publication name\n+ `query.contributor` - query author, editor, chair and translator given and family names\n+ `query.degree` - query degree\n+ `query.description` - query description\n+ `query.editor` - query editor given and family names\n+ `query.event-acronym` - query acronym of the event\n+ `query.event-location` - query location of the event\n+ `query.event-name` - query name of the event\n+ `query.event-sponsor` - query sponsor of the event\n+ `query.event-theme` - query theme of the event\n+ `query.funder-name` - query name of the funder\n+ `query.publisher-location` - query location of the publisher\n+ `query.publisher-name` - query publisher name\n+ `query.standards-body-acronym` - query acronym of the standards body\n+ `query.standards-body-name` - query standards body name\n+ `query.title` - query title\n+ `query.translator` - query translator given and family names\n## Sort\n\nResults can be sorted by applying the `sort` and `order` parameters. `sort` sets the field by which results will be sorted. `order` sets the result ordering, either `asc` or `desc` (default is `desc`).\n\nAn example that sorts results in order of publication, beginning with the least recent:\n\n##\n\n```\n\/works?query=josiah+carberry&sort=published&order=asc\n```\n\n##\n\nThis endpoint supports sorting by the following elements:\n\n##\n\n+ `created` - sort by created date\n+ `deposited` - sort by time of most recent deposit\n+ `indexed` - sort by time of most recent index\n+ `is-referenced-by-count` - sort by number of times this DOI is referenced by other Crossref DOIs\n+ `issued` - sort by issued date (earliest known publication date)\n+ `published` - sort by publication date\n+ `published-online` - sort by online publication date\n+ `published-print` - sort by print publication date\n+ `references-count` - sort by number of references included in the references section of the document identified by this DOI\n+ `relevance` - sort by relevance score\n+ `score` - sort by relevance score\n+ `updated` - sort by date of most recent change to metadata, currently the same as\u00a0deposited\n## Facets\n\nSummary statistics counts can be retrieved by enabling faceting. Facets are enabled by providing a facet field name along with a maximum number of returned term values, which can be up to 1000. The larger the number of returned values, the longer the query will take. Some facet fields can accept a * as their maximum, which indicates that up to 1000 values can be returned.\n\n\nNote that facet counts use approximation based on assumptions about the data. Some facets count the number of relationships and double-count a record with the same relationship two or more times (e.g. a record with two published Corrections). They may therefore differ from exact counts obtained using filters.\n\n##\n\nFor example, to get facet counts for all work types:\n\n##\n```\n\/works?facet=type-name:*\n```\n\n##\n\nThis endpoint supports the following facets:\n\n##\n\n+ `affiliation` - author affiliation\n+ `archive` - archive location\n+ `assertion` - custom Crossmark assertion name\n+ `assertion-group` - custom Crossmark assertion group name\n+ `category-name` - category name of work\n+ `container-title` - [max value 100], work container title, such as journal title, or book title\n+ `funder-doi` - funder DOI\n+ `funder-name` - funder literal name as deposited alongside DOI\n+ `issn` - [max value 100], journal ISSN (any - print, electronic, link)\n+ `journal-issue` - journal issue number\n+ `journal-volume` - journal volume\n+ `license` - license URI of work\n+ `link-application` - intended application of the full text link\n+ `orcid` - [max value 100], contributor ORCID\n+ `published` - earliest year of publication\n+ `publisher-name` - publisher name of work\n+ `relation-type` - relation type described by work or described by another work with work as object\n+ `ror-id` - institution ROR ID\n+ `source` - source of the DOI\n+ `type-name` - work type name, such as\u00a0journal-article\u00a0or\u00a0book-chapter\n+ `update-type` - significant update type\n## Filters\n\nFilters allow you to select items based on specific criteria. All filter results are lists.\n\n##\n\nFor example:\n\n##\n```\n\/works?filter=type:dataset\n```\n\n### Multiple filters\n\nMultiple filters can be specified in a single query. In such a case, different filters will be applied with AND semantics, while specifying the same filter multiple times will result in OR semantics - that is, specifying the filters:\n\n- `is-update:true`\n- `from-pub-date:2014-03-03`\n- `funder:10.13039\/100000001`\n- `funder:10.13039\/100000050`\n\nwould locate documents that are updates, were published on or after 3rd March 2014 and were funded by either the National Science Foundation (`10.13039\/100000001`) or the National Heart, Lung, and Blood Institute (`10.13039\/100000050`). These filters would be specified by joining each filter together with a comma:\n\n##\n```\n\/works?filter=is-update:true,from-pub-date:2014-03-03,funder:10.13039\/100000001,funder:10.13039\/100000050\n```\n\n### Dot filters\n\nA filter with a dot in its name is special. The dot signifies that the filter will be applied to some other record type that is related to primary resource record type. For example, with work queries, one can filter on works that have an award, where the same award has a particular award number and award-giving funding agency:\n\n##\n```\n\/works?filter=award.number:CBET-0756451,award.funder:10.13039\/100000001\n```\n##\n\nHere we filter on works that have an award by the National Science Foundation that also has the award number `CBET-0756451`.\n\n### Note on dates\n\nThe dates in filters should always be of the form YYYY-MM-DD, YYYY-MM or YYYY. The date filters are inclusive. For example:\n\n* `from-pub-date:2018-09-18` filters works published on or after 18th September 2018\n* `from-created-date:2016-02-29,until-created-date:2016-02-29` filters works first deposited on 29th February 2016\n* `until-created-date:2010-06` filters works first deposited in or before June 2010\n* `from-update-date:2017,until-update-date:2017` filters works with metadata updated in 2017\n\nAlso note that date information in Crossref metadata can often be incomplete. So, for example, a publisher may only include the year and month of publication for a journal article. For a monograph they might just include the year. In these cases the API selects the earliest possible date given the information provided. So, for instance, if the publisher only provided 2013-02 as the published date, then the date would be treated as 2013-02-01. Similarly, if the publisher only provided the year 2013 as the date, it would be treated at 2013-01-01.\n\n### Note on owner prefixes\n\nThe prefix of a Crossref DOI does **NOT** indicate who currently owns the DOI. It only reflects who originally registered the DOI. Crossref metadata has an **prefix** element that records the current owner of the Crossref DOI in question.\n\n##\n\nCrossref also has member IDs for depositing organisations. A single member may control multiple owner prefixes, which in turn may control a number of DOIs. When looking at works published by a certain organisaton, member IDs and the member routes should be used.\n\n### Notes on incremental metadata updates\n\nWhen using time filters to retrieve periodic, incremental metadata updates, the `from-index-date` filter should be used over `from-update-date`, `from-deposit-date`, `from-created-date` and `from-pub-date`. The timestamp that `from-index-date` filters on is guaranteed to be updated every time there is a change to metadata requiring a reindex.\n\n##\n\nThis endpoint supports the following filters:\n\n##\n\n+ `alternative-id` - metadata for records with the given alternative ID, which may be a publisher-specific ID, or any other identifier a publisher may have provided\n+ `archive` - metadata where value of archive partner equals given archive name\n+ `article-number` - metadata for records with a given article number\n+ `assertion` - metadata for records with a given named assertion\n+ `assertion-group` - metadata for records with an assertion in a given group\n+ `award`\n  + `award.funder` - metadata for records with award funder equal to given funder, optionally combine with\u00a0`award.number`\n  + `award.number` - metadata for records with award number equal to given number, optionally combine with\u00a0`award.funder`\n+ `category-name` - metadata for records with category label equal to given name, category labels come from\u00a0the list\u00a0published by Scopus\n+ `citation-id`\n+ `clinical-trial-number` - metadata for records with given clinical trial number\n+ `container-title` - metadata with a publication title that exactly equals given title\n+ `content-domain` - metadata where the publisher records a given domain name as the location Crossmark content will appear\n+ `doi` - metadata describing given DOI\n+ `from-accepted-date` - [date], metadata where accepted date is since given date (inclusive)\n+ `from-approved-date` - [date], metadata where approved date is since given date (inclusive)\n+ `from-awarded-date` - [date], metadata where award date is since given date (inclusive)\n+ `from-created-date` - [date], metadata first deposited since given date (inclusive)\n+ `from-deposit-date` - [date], metadata last (re)deposited since given date (inclusive)\n+ `from-event-end-date` - [date], metadata where event end date is since given date (inclusive)\n+ `from-event-start-date` - [date], metadata where event start date is since given date  (inclusive)\n+ `from-index-date` - [date], metadata indexed since given date (inclusive)\n+ `from-issued-date` - [date], metadata where issued date is since given date  (inclusive)\n+ `from-online-pub-date` - [date], metadata where online published date is since given date (inclusive)\n+ `from-posted-date` - [date], metadata where posted date is since given date (inclusive)\n+ `from-print-pub-date` - [date], metadata where print published date is since given date (inclusive)\n+ `from-pub-date` - [date], metadata where published date is since given date (inclusive)\n+ `from-update-date` - [date], metadata updated since given date (inclusive), currently the same as\u00a0`from-deposit-date`\n+ `full-text`\n  + `full-text.type` - metadata where\u00a0`resource`\u00a0element's\u00a0`content_type`\u00a0attribute equals given version\u00a0mime type\u00a0(e.g.\u00a0application\/pdf)\n  + `full-text.application` - [text-mining,\u00a0similarity-checking\u00a0or\u00a0unspecified], metadata where\u00a0`resource` link has given application\n  + `full-text.version` - metadata where\u00a0`resource`\u00a0element's\u00a0`content_version`\u00a0attribute equals given version\n+ `funder` - metadata which include given funder id\u00a0in FundRef data\n+ `funder-doi-asserted-by` - metadata where funder DOI was asserted by given body\n+ `group-title` - metadata with given group title\n+ `gte-award-amount` - metadata where award is greater than or equals given number\n+ `has-abstract` - [0 or 1], metadata for records with\/without an abstract\n+ `has-affiliation` - [0 or 1], metadata for records with\/without affiliation information\n+ `has-alias`\n+ `has-archive` - [0 or 1], metadata which includes\/does not include name of archive partner\n+ `has-assertion` - [0 or 1], metadata for records with\/without assertions\n+ `has-authenticated-orcid` - [0 or 1], metadata which includes\/does not include one or more ORCIDs where the depositing publisher claims to have witness the ORCID owner authenticate with ORCID\n+ `has-award` - [0 or 1], metadata for records with\/without award\n+ `has-clinical-trial-number` - [0 or 1], metadata for records with\/without a clinical trial number\n+ `has-content-domain` - [0 or 1], metadata where the publisher records\/does not record a domain name location for Crossmark content\n+ `has-description`\n+ `has-domain-restriction` - [0 or 1], metadata where the publisher restricts\/does not restrict Crossmark usage to content domains\n+ `has-event` - [0 or 1], metadata for records with\/without event\n+ `has-full-text` - [0 or 1], metadata that includes\/does not include any full text\u00a0`resource`\u00a0elements\n+ `has-funder` - [0 or 1], metadata which includes\/does not include one or more funder entry\n+ `has-funder-doi` - [0 or 1], metadata for records with\/without funder DOI\n+ `has-license` - [0 or 1], metadata that includes\/does not include any\u00a0`license_ref`\u00a0elements\n+ `has-orcid` - [0 or 1], metadata which includes\/does not include one or more ORCIDs\n+ `has-prime-doi`\n+ `has-references` - [0 or 1], metadata for works that have\/don't have a list of references\n+ `has-relation` - [0 or 1], metadata for records that either assert\/do not assert or are\/are not the object of a relation\n+ `has-ror-id` - [0 or 1], metadata for records with\/without ROR ID\n+ `has-update` - [0 or 1], metadata for records with\/without update information\n+ `has-update-policy` - [0 or 1], metadata for records that include\/do not include a link to an editorial update policy\n+ `is-update` - [0 or 1], metadata for records that represent\/do not represent editorial updates\n+ `isbn` - metadata with given ISBN\n+ `issn` - metadata with given ISSN, format is\u00a0xxxx-xxxx\n+ `license`\n  + `license.url` - metadata where\u00a0`license_ref`\u00a0value equals\u00a0given url\n  + `license.version` - metadata where the\u00a0`license_ref`'s\u00a0`applies_to`\u00a0attribute equals given version\n  + `license.delay` - metadata where difference between publication date and the\u00a0`license_ref`'s\u00a0`start_date`\u00a0attribute is <=\u00a0than given delay\u00a0(in days)\n+ `lte-award-amount` - metadata where award is less than or equals given number\n+ `member` - metadata belonging to a given Crossref member\n+ `orcid` - metadata where\u00a0there is a contributor with given ORCID\n+ `prefix` - metadata belonging to a given DOI owner prefix\u00a0(e.g.\u00a010.1016)\n+ `relation`\n  + `relation.type` - metadata for records with a relation with the given type from the Crossref relations schema (e.g.\u00a0is-referenced-by,\u00a0is-parent-of,\u00a0is-preprint-of)\n  + `relation.object-type` - metadata for records with a relation, where the object type matches given type from the Crossref relations schema (e.g.\u00a0doi,\u00a0issn)\n  + `relation.object` - metadata for records with a relation, where the object identifier matches given identifier\n+ `ror-id` - metadata with given ROR ID\n+ `type` - metadata records whose type equals given type, type must be an ID value from the list of types returned by the\u00a0\/types\u00a0resource\n+ `type-name` - metadata for records with type name equal to given name\n+ `until-accepted-date` - [date], metadata where accepted date is before given date (inclusive)\n+ `until-approved-date` - [date], metadata where approved date is before given date (inclusive)\n+ `until-awarded-date` - [date], metadata where award date is before given date (inclusive)\n+ `until-created-date` - [date], metadata first deposited before given date (inclusive)\n+ `until-deposit-date` - [date], metadata last (re)deposited before given date (inclusive)\n+ `until-event-end-date` - [date], metadata where event end date is before given date (inclusive)\n+ `until-event-start-date` - [date], metadata where event start date is before given date  (inclusive)\n+ `until-index-date` - [date], metadata indexed before given date (inclusive)\n+ `until-issued-date` - [date], metadata where issued date is before given date  (inclusive)\n+ `until-online-pub-date` - [date], metadata where online published date is before given date (inclusive)\n+ `until-posted-date` - [date], metadata where posted date is before given date (inclusive)\n+ `until-print-pub-date` - [date], metadata where print published date is before given date (inclusive)\n+ `until-pub-date` - [date], metadata where published date is before given date (inclusive)\n+ `until-update-date` - [date], metadata updated before given date (inclusive), currently the same as\u00a0`until-deposit-date`\n+ `update-type` - metadata with given update type\n+ `updates` - metadata for records that represent editorial updates to given DOI\n## Elements\n\nCrossref metadata records can be quite large. Sometimes you just want a few elements from the schema. You can \\\"select\\\" a subset of elements to return using the `select` parameter. This can make your API calls much more efficient. For example:\n\n##\n```\n\/works?select=DOI,prefix,title\n```\n\n##\n\nThis endpoint supports selecting the following elements.\n\n##\n\n+ `DOI`\n+ `ISBN`\n+ `ISSN`\n+ `URL`\n+ `abstract`\n+ `accepted`\n+ `alternative-id`\n+ `approved`\n+ `archive`\n+ `article-number`\n+ `assertion`\n+ `author`\n+ `chair`\n+ `clinical-trial-number`\n+ `container-title`\n+ `content-created`\n+ `content-domain`\n+ `created`\n+ `degree`\n+ `deposited`\n+ `editor`\n+ `event`\n+ `funder`\n+ `group-title`\n+ `indexed`\n+ `is-referenced-by-count`\n+ `issn-type`\n+ `issue`\n+ `issued`\n+ `license`\n+ `link`\n+ `member`\n+ `original-title`\n+ `page`\n+ `posted`\n+ `prefix`\n+ `published`\n+ `published-online`\n+ `published-print`\n+ `publisher`\n+ `publisher-location`\n+ `reference`\n+ `references-count`\n+ `relation`\n+ `resource`\n+ `score`\n+ `short-container-title`\n+ `short-title`\n+ `standards-body`\n+ `subject`\n+ `subtitle`\n+ `title`\n+ `translator`\n+ `type`\n+ `update-policy`\n+ `update-to`\n+ `updated-by`\n+ `volume`\n## Pagination with offsets\n\nOffsets are an easy way to iterate over results sets up to 10,000 items. This limit applies to the sum of values of parameters `offset` + `rows`.\n\n##\n\nThe number of items returned in a single response is controlled by `rows` parameter (default is 20, and maximum is 1,000). To limit results to 5, for example, you could do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5\n```\n\n##\n\n`offset` parameter can be used to retrieve items starting from a specific index of the result list. For example, to select the second set of 5 results (i.e. results 6 through 10), you would do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5&offset=5\n```\n\n##\n\n## Deep paging\n\nDeep paging using cursors can be used to iterate over large result sets, without any limits on their size.\n\n##\n\nTo use deep paging make a query as normal, but include the `cursor` parameter with a value of `*`, for example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=*\n```\n\n##\n\nA `next-cursor` field will be provided in the JSON response. To get the next page of results, pass the value of `next-cursor` as the cursor parameter (remember to URL-encode). For example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=<value of next-cursor parameter>\n```\n\n##\n\nClients should check the number of returned items. If the number of returned items is equal to the number of expected rows then the end of the result set has been reached. Using next-cursor beyond this point will result in responses with an empty items list. Cursors expire after 5 minutes if they are not used.\n\n##\n\n## Sample\n\nBeing able to select random results is useful for both testing and sampling. You can use the `sample` parameter to retrieve random results. So, for example, the following selects 10 random works:\n\n##\n```\n\/works?sample=10\n```\n##\n\nNote that when you use the `sample` parameter, the `rows` and `offset` parameters are ignored.\n\n\n## Parameter combinations\n\nAny combination of `query`, `query.*`, `filter`, `facet`, `select` and `sort` can be used with offsets. Sampling cannot be combined with offsets.\n\n##\n\nAny combination of `query`, `query.*`, `filter`, `facet`, `select` and `sort` may also be used with deep paging cursors. `rows` may also be specified.\n\n##\n\n`offset` and `sample` cannot be used in combination with cursors.\n\n##\n","parameters":[{"in":"query","name":"rows","description":"The number of rows per page","required":false,"type":"integer","format":"int64"},{"in":"query","name":"order","description":"Combined with sort can be used to specify the order of results, e.g. asc or desc","required":false,"pattern":"(asc|desc)","type":"string"},{"in":"query","name":"facet","description":"Exposes the ability to retrieve counts for pre-defined facets e.g. `type-name:*` returns counts of all works by type","required":false,"type":"string"},{"in":"query","name":"sample","description":"Exposes the ability to return `N` randomly sampled items","required":false,"type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Exposes the ability to sort results by a certain field, e.g. `score`","required":false,"type":"string"},{"in":"query","name":"offset","description":"The number of rows to skip before returning","required":false,"type":"integer","format":"int64"},{"in":"query","name":"mailto","description":"The email address to identify yourself and be in the \"polite pool\"","required":false,"pattern":"^[A-Za-z0-9._%+-]+@[A-Za-z0-9-]+\\.[A-Za-z]{2,6}$","type":"string"},{"in":"query","name":"select","description":"Exposes the ability to select certain fields, supports a comma separated list of fields, e.g. `DOI,volume`","required":false,"pattern":"^\\w+(,\\w+)*$","type":"string"},{"in":"query","name":"query","description":"Exposes the ability to free text query certain fields","required":false,"type":"string"},{"in":"query","name":"filter","description":"Exposes the ability to filter by certain fields, supports a comma separated list of lucene filters, e.g. `content-domain:psychoceramics.labs.crossref.org`","required":false,"type":"string"},{"in":"query","name":"cursor","description":"Exposes the ability to deep page through large result sets, where offset would cause performance problems","required":false,"type":"string"},{"in":"path","name":"id","description":"","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/WorksMessage"},"description":"A list of works"}},"tags":["Members"]}},"\/journals":{"get":{"description":"Return a list of journals in the Crossref database.\n## Queries\n\nFree form search queries can be made, for example, journals that include `pharmacy` and `health`:\n\n##\n\n```\n\/journals?query=pharmacy+health\n```\n\n\n## Pagination with offsets\n\nOffsets can be used to iterate over the results. For this route, the maximum number of available results is 80,000, which in this case allows to retrieve all the indexed items. This limit applies to the sum of values of parameters `offset` + `rows`.\n\n##\n\nThe number of items returned in a single response is controlled by `rows` parameter (default is 20, and maximum is 1,000). To limit results to 5, for example, you could do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5\n```\n\n##\n\n`offset` parameter can be used to retrieve items starting from a specific index of the result list. For example, to select the second set of 5 results (i.e. results 6 through 10), you would do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5&offset=5\n```\n\n##\n\n## Deep paging\n\nDeep paging using cursors can be used to iterate over large result sets, without any limits on their size.\n\n##\n\nTo use deep paging make a query as normal, but include the `cursor` parameter with a value of `*`, for example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=*\n```\n\n##\n\nA `next-cursor` field will be provided in the JSON response. To get the next page of results, pass the value of `next-cursor` as the cursor parameter (remember to URL-encode). For example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=<value of next-cursor parameter>\n```\n\n##\n\nClients should check the number of returned items. If the number of returned items is equal to the number of expected rows then the end of the result set has been reached. Using next-cursor beyond this point will result in responses with an empty items list. Cursors expire after 5 minutes if they are not used.\n\n##\n","parameters":[{"in":"query","name":"cursor","description":"Exposes the ability to deep page through large result sets, where offset would cause performance problems","required":false,"type":"string"},{"in":"query","name":"query","description":"Exposes the ability to free text query certain fields","required":false,"type":"string"},{"in":"query","name":"rows","description":"The number of rows per page","required":false,"type":"integer","format":"int64"},{"in":"query","name":"mailto","description":"The email address to identify yourself and be in the \"polite pool\"","required":false,"pattern":"^[A-Za-z0-9._%+-]+@[A-Za-z0-9-]+\\.[A-Za-z]{2,6}$","type":"string"},{"in":"query","name":"offset","description":"The number of rows to skip before returning","required":false,"type":"integer","format":"int64"}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/JournalsMessage"},"description":"A list of journals"}},"tags":["Journals"]}},"\/members\/{id}":{"get":{"description":"Returns metadata for a Crossref member, as an example use id 324","parameters":[{"in":"path","name":"id","description":"","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/MemberMessage"},"description":"The prefix data identified by {id}."},"404":{"description":"The prefix data identified by {id} does not exist."}},"tags":["Members"]}},"\/prefixes\/{prefix}\/works":{"get":{"description":"Returns list of works associated with specified {prefix}.\n## Queries\n\nFree form search queries can be made, for example, works that include `renear` or `ontologies` (or both):\n\n##\n\n```\n\/works?query=renear+ontologies\n```\n\n\n## Field Queries\nField queries allow for queries that match only particular fields of metadata. For example, this query matches records that contain the tokens `richard` or `feynman` (or both) in any author field:\n\n##\n\n```\n\/works?query.author=richard+feynman\n```\n\n##\n\nField queries can be combined with the general `query` parameter and each other. Each query parameter is ANDed with the others:\n\n##\n```\n\/works?query.title=room+at+the+bottom&query.author=richard+feynman\n```\n\n##\n\nThis endpoint supports the following field queries:\n\n##\n\n+ `query.affiliation` - query contributor affiliations\n+ `query.author` - query author given and family names\n+ `query.bibliographic` - query bibliographic information, useful for citation look up, includes titles, authors, ISSNs and publication years\n+ `query.chair` - query chair given and family names\n+ `query.container-title` - query\u00a0container title\u00a0aka. publication name\n+ `query.contributor` - query author, editor, chair and translator given and family names\n+ `query.degree` - query degree\n+ `query.description` - query description\n+ `query.editor` - query editor given and family names\n+ `query.event-acronym` - query acronym of the event\n+ `query.event-location` - query location of the event\n+ `query.event-name` - query name of the event\n+ `query.event-sponsor` - query sponsor of the event\n+ `query.event-theme` - query theme of the event\n+ `query.funder-name` - query name of the funder\n+ `query.publisher-location` - query location of the publisher\n+ `query.publisher-name` - query publisher name\n+ `query.standards-body-acronym` - query acronym of the standards body\n+ `query.standards-body-name` - query standards body name\n+ `query.title` - query title\n+ `query.translator` - query translator given and family names\n## Sort\n\nResults can be sorted by applying the `sort` and `order` parameters. `sort` sets the field by which results will be sorted. `order` sets the result ordering, either `asc` or `desc` (default is `desc`).\n\nAn example that sorts results in order of publication, beginning with the least recent:\n\n##\n\n```\n\/works?query=josiah+carberry&sort=published&order=asc\n```\n\n##\n\nThis endpoint supports sorting by the following elements:\n\n##\n\n+ `created` - sort by created date\n+ `deposited` - sort by time of most recent deposit\n+ `indexed` - sort by time of most recent index\n+ `is-referenced-by-count` - sort by number of times this DOI is referenced by other Crossref DOIs\n+ `issued` - sort by issued date (earliest known publication date)\n+ `published` - sort by publication date\n+ `published-online` - sort by online publication date\n+ `published-print` - sort by print publication date\n+ `references-count` - sort by number of references included in the references section of the document identified by this DOI\n+ `relevance` - sort by relevance score\n+ `score` - sort by relevance score\n+ `updated` - sort by date of most recent change to metadata, currently the same as\u00a0deposited\n## Facets\n\nSummary statistics counts can be retrieved by enabling faceting. Facets are enabled by providing a facet field name along with a maximum number of returned term values, which can be up to 1000. The larger the number of returned values, the longer the query will take. Some facet fields can accept a * as their maximum, which indicates that up to 1000 values can be returned.\n\n\nNote that facet counts use approximation based on assumptions about the data. Some facets count the number of relationships and double-count a record with the same relationship two or more times (e.g. a record with two published Corrections). They may therefore differ from exact counts obtained using filters.\n\n##\n\nFor example, to get facet counts for all work types:\n\n##\n```\n\/works?facet=type-name:*\n```\n\n##\n\nThis endpoint supports the following facets:\n\n##\n\n+ `affiliation` - author affiliation\n+ `archive` - archive location\n+ `assertion` - custom Crossmark assertion name\n+ `assertion-group` - custom Crossmark assertion group name\n+ `category-name` - category name of work\n+ `container-title` - [max value 100], work container title, such as journal title, or book title\n+ `funder-doi` - funder DOI\n+ `funder-name` - funder literal name as deposited alongside DOI\n+ `issn` - [max value 100], journal ISSN (any - print, electronic, link)\n+ `journal-issue` - journal issue number\n+ `journal-volume` - journal volume\n+ `license` - license URI of work\n+ `link-application` - intended application of the full text link\n+ `orcid` - [max value 100], contributor ORCID\n+ `published` - earliest year of publication\n+ `publisher-name` - publisher name of work\n+ `relation-type` - relation type described by work or described by another work with work as object\n+ `ror-id` - institution ROR ID\n+ `source` - source of the DOI\n+ `type-name` - work type name, such as\u00a0journal-article\u00a0or\u00a0book-chapter\n+ `update-type` - significant update type\n## Filters\n\nFilters allow you to select items based on specific criteria. All filter results are lists.\n\n##\n\nFor example:\n\n##\n```\n\/works?filter=type:dataset\n```\n\n### Multiple filters\n\nMultiple filters can be specified in a single query. In such a case, different filters will be applied with AND semantics, while specifying the same filter multiple times will result in OR semantics - that is, specifying the filters:\n\n- `is-update:true`\n- `from-pub-date:2014-03-03`\n- `funder:10.13039\/100000001`\n- `funder:10.13039\/100000050`\n\nwould locate documents that are updates, were published on or after 3rd March 2014 and were funded by either the National Science Foundation (`10.13039\/100000001`) or the National Heart, Lung, and Blood Institute (`10.13039\/100000050`). These filters would be specified by joining each filter together with a comma:\n\n##\n```\n\/works?filter=is-update:true,from-pub-date:2014-03-03,funder:10.13039\/100000001,funder:10.13039\/100000050\n```\n\n### Dot filters\n\nA filter with a dot in its name is special. The dot signifies that the filter will be applied to some other record type that is related to primary resource record type. For example, with work queries, one can filter on works that have an award, where the same award has a particular award number and award-giving funding agency:\n\n##\n```\n\/works?filter=award.number:CBET-0756451,award.funder:10.13039\/100000001\n```\n##\n\nHere we filter on works that have an award by the National Science Foundation that also has the award number `CBET-0756451`.\n\n### Note on dates\n\nThe dates in filters should always be of the form YYYY-MM-DD, YYYY-MM or YYYY. The date filters are inclusive. For example:\n\n* `from-pub-date:2018-09-18` filters works published on or after 18th September 2018\n* `from-created-date:2016-02-29,until-created-date:2016-02-29` filters works first deposited on 29th February 2016\n* `until-created-date:2010-06` filters works first deposited in or before June 2010\n* `from-update-date:2017,until-update-date:2017` filters works with metadata updated in 2017\n\nAlso note that date information in Crossref metadata can often be incomplete. So, for example, a publisher may only include the year and month of publication for a journal article. For a monograph they might just include the year. In these cases the API selects the earliest possible date given the information provided. So, for instance, if the publisher only provided 2013-02 as the published date, then the date would be treated as 2013-02-01. Similarly, if the publisher only provided the year 2013 as the date, it would be treated at 2013-01-01.\n\n### Note on owner prefixes\n\nThe prefix of a Crossref DOI does **NOT** indicate who currently owns the DOI. It only reflects who originally registered the DOI. Crossref metadata has an **prefix** element that records the current owner of the Crossref DOI in question.\n\n##\n\nCrossref also has member IDs for depositing organisations. A single member may control multiple owner prefixes, which in turn may control a number of DOIs. When looking at works published by a certain organisaton, member IDs and the member routes should be used.\n\n### Notes on incremental metadata updates\n\nWhen using time filters to retrieve periodic, incremental metadata updates, the `from-index-date` filter should be used over `from-update-date`, `from-deposit-date`, `from-created-date` and `from-pub-date`. The timestamp that `from-index-date` filters on is guaranteed to be updated every time there is a change to metadata requiring a reindex.\n\n##\n\nThis endpoint supports the following filters:\n\n##\n\n+ `alternative-id` - metadata for records with the given alternative ID, which may be a publisher-specific ID, or any other identifier a publisher may have provided\n+ `archive` - metadata where value of archive partner equals given archive name\n+ `article-number` - metadata for records with a given article number\n+ `assertion` - metadata for records with a given named assertion\n+ `assertion-group` - metadata for records with an assertion in a given group\n+ `award`\n  + `award.funder` - metadata for records with award funder equal to given funder, optionally combine with\u00a0`award.number`\n  + `award.number` - metadata for records with award number equal to given number, optionally combine with\u00a0`award.funder`\n+ `category-name` - metadata for records with category label equal to given name, category labels come from\u00a0the list\u00a0published by Scopus\n+ `citation-id`\n+ `clinical-trial-number` - metadata for records with given clinical trial number\n+ `container-title` - metadata with a publication title that exactly equals given title\n+ `content-domain` - metadata where the publisher records a given domain name as the location Crossmark content will appear\n+ `doi` - metadata describing given DOI\n+ `from-accepted-date` - [date], metadata where accepted date is since given date (inclusive)\n+ `from-approved-date` - [date], metadata where approved date is since given date (inclusive)\n+ `from-awarded-date` - [date], metadata where award date is since given date (inclusive)\n+ `from-created-date` - [date], metadata first deposited since given date (inclusive)\n+ `from-deposit-date` - [date], metadata last (re)deposited since given date (inclusive)\n+ `from-event-end-date` - [date], metadata where event end date is since given date (inclusive)\n+ `from-event-start-date` - [date], metadata where event start date is since given date  (inclusive)\n+ `from-index-date` - [date], metadata indexed since given date (inclusive)\n+ `from-issued-date` - [date], metadata where issued date is since given date  (inclusive)\n+ `from-online-pub-date` - [date], metadata where online published date is since given date (inclusive)\n+ `from-posted-date` - [date], metadata where posted date is since given date (inclusive)\n+ `from-print-pub-date` - [date], metadata where print published date is since given date (inclusive)\n+ `from-pub-date` - [date], metadata where published date is since given date (inclusive)\n+ `from-update-date` - [date], metadata updated since given date (inclusive), currently the same as\u00a0`from-deposit-date`\n+ `full-text`\n  + `full-text.type` - metadata where\u00a0`resource`\u00a0element's\u00a0`content_type`\u00a0attribute equals given version\u00a0mime type\u00a0(e.g.\u00a0application\/pdf)\n  + `full-text.application` - [text-mining,\u00a0similarity-checking\u00a0or\u00a0unspecified], metadata where\u00a0`resource` link has given application\n  + `full-text.version` - metadata where\u00a0`resource`\u00a0element's\u00a0`content_version`\u00a0attribute equals given version\n+ `funder` - metadata which include given funder id\u00a0in FundRef data\n+ `funder-doi-asserted-by` - metadata where funder DOI was asserted by given body\n+ `group-title` - metadata with given group title\n+ `gte-award-amount` - metadata where award is greater than or equals given number\n+ `has-abstract` - [0 or 1], metadata for records with\/without an abstract\n+ `has-affiliation` - [0 or 1], metadata for records with\/without affiliation information\n+ `has-alias`\n+ `has-archive` - [0 or 1], metadata which includes\/does not include name of archive partner\n+ `has-assertion` - [0 or 1], metadata for records with\/without assertions\n+ `has-authenticated-orcid` - [0 or 1], metadata which includes\/does not include one or more ORCIDs where the depositing publisher claims to have witness the ORCID owner authenticate with ORCID\n+ `has-award` - [0 or 1], metadata for records with\/without award\n+ `has-clinical-trial-number` - [0 or 1], metadata for records with\/without a clinical trial number\n+ `has-content-domain` - [0 or 1], metadata where the publisher records\/does not record a domain name location for Crossmark content\n+ `has-description`\n+ `has-domain-restriction` - [0 or 1], metadata where the publisher restricts\/does not restrict Crossmark usage to content domains\n+ `has-event` - [0 or 1], metadata for records with\/without event\n+ `has-full-text` - [0 or 1], metadata that includes\/does not include any full text\u00a0`resource`\u00a0elements\n+ `has-funder` - [0 or 1], metadata which includes\/does not include one or more funder entry\n+ `has-funder-doi` - [0 or 1], metadata for records with\/without funder DOI\n+ `has-license` - [0 or 1], metadata that includes\/does not include any\u00a0`license_ref`\u00a0elements\n+ `has-orcid` - [0 or 1], metadata which includes\/does not include one or more ORCIDs\n+ `has-prime-doi`\n+ `has-references` - [0 or 1], metadata for works that have\/don't have a list of references\n+ `has-relation` - [0 or 1], metadata for records that either assert\/do not assert or are\/are not the object of a relation\n+ `has-ror-id` - [0 or 1], metadata for records with\/without ROR ID\n+ `has-update` - [0 or 1], metadata for records with\/without update information\n+ `has-update-policy` - [0 or 1], metadata for records that include\/do not include a link to an editorial update policy\n+ `is-update` - [0 or 1], metadata for records that represent\/do not represent editorial updates\n+ `isbn` - metadata with given ISBN\n+ `issn` - metadata with given ISSN, format is\u00a0xxxx-xxxx\n+ `license`\n  + `license.url` - metadata where\u00a0`license_ref`\u00a0value equals\u00a0given url\n  + `license.version` - metadata where the\u00a0`license_ref`'s\u00a0`applies_to`\u00a0attribute equals given version\n  + `license.delay` - metadata where difference between publication date and the\u00a0`license_ref`'s\u00a0`start_date`\u00a0attribute is <=\u00a0than given delay\u00a0(in days)\n+ `lte-award-amount` - metadata where award is less than or equals given number\n+ `member` - metadata belonging to a given Crossref member\n+ `orcid` - metadata where\u00a0there is a contributor with given ORCID\n+ `prefix` - metadata belonging to a given DOI owner prefix\u00a0(e.g.\u00a010.1016)\n+ `relation`\n  + `relation.type` - metadata for records with a relation with the given type from the Crossref relations schema (e.g.\u00a0is-referenced-by,\u00a0is-parent-of,\u00a0is-preprint-of)\n  + `relation.object-type` - metadata for records with a relation, where the object type matches given type from the Crossref relations schema (e.g.\u00a0doi,\u00a0issn)\n  + `relation.object` - metadata for records with a relation, where the object identifier matches given identifier\n+ `ror-id` - metadata with given ROR ID\n+ `type` - metadata records whose type equals given type, type must be an ID value from the list of types returned by the\u00a0\/types\u00a0resource\n+ `type-name` - metadata for records with type name equal to given name\n+ `until-accepted-date` - [date], metadata where accepted date is before given date (inclusive)\n+ `until-approved-date` - [date], metadata where approved date is before given date (inclusive)\n+ `until-awarded-date` - [date], metadata where award date is before given date (inclusive)\n+ `until-created-date` - [date], metadata first deposited before given date (inclusive)\n+ `until-deposit-date` - [date], metadata last (re)deposited before given date (inclusive)\n+ `until-event-end-date` - [date], metadata where event end date is before given date (inclusive)\n+ `until-event-start-date` - [date], metadata where event start date is before given date  (inclusive)\n+ `until-index-date` - [date], metadata indexed before given date (inclusive)\n+ `until-issued-date` - [date], metadata where issued date is before given date  (inclusive)\n+ `until-online-pub-date` - [date], metadata where online published date is before given date (inclusive)\n+ `until-posted-date` - [date], metadata where posted date is before given date (inclusive)\n+ `until-print-pub-date` - [date], metadata where print published date is before given date (inclusive)\n+ `until-pub-date` - [date], metadata where published date is before given date (inclusive)\n+ `until-update-date` - [date], metadata updated before given date (inclusive), currently the same as\u00a0`until-deposit-date`\n+ `update-type` - metadata with given update type\n+ `updates` - metadata for records that represent editorial updates to given DOI\n## Elements\n\nCrossref metadata records can be quite large. Sometimes you just want a few elements from the schema. You can \\\"select\\\" a subset of elements to return using the `select` parameter. This can make your API calls much more efficient. For example:\n\n##\n```\n\/works?select=DOI,prefix,title\n```\n\n##\n\nThis endpoint supports selecting the following elements.\n\n##\n\n+ `DOI`\n+ `ISBN`\n+ `ISSN`\n+ `URL`\n+ `abstract`\n+ `accepted`\n+ `alternative-id`\n+ `approved`\n+ `archive`\n+ `article-number`\n+ `assertion`\n+ `author`\n+ `chair`\n+ `clinical-trial-number`\n+ `container-title`\n+ `content-created`\n+ `content-domain`\n+ `created`\n+ `degree`\n+ `deposited`\n+ `editor`\n+ `event`\n+ `funder`\n+ `group-title`\n+ `indexed`\n+ `is-referenced-by-count`\n+ `issn-type`\n+ `issue`\n+ `issued`\n+ `license`\n+ `link`\n+ `member`\n+ `original-title`\n+ `page`\n+ `posted`\n+ `prefix`\n+ `published`\n+ `published-online`\n+ `published-print`\n+ `publisher`\n+ `publisher-location`\n+ `reference`\n+ `references-count`\n+ `relation`\n+ `resource`\n+ `score`\n+ `short-container-title`\n+ `short-title`\n+ `standards-body`\n+ `subject`\n+ `subtitle`\n+ `title`\n+ `translator`\n+ `type`\n+ `update-policy`\n+ `update-to`\n+ `updated-by`\n+ `volume`\n## Pagination with offsets\n\nOffsets are an easy way to iterate over results sets up to 10,000 items. This limit applies to the sum of values of parameters `offset` + `rows`.\n\n##\n\nThe number of items returned in a single response is controlled by `rows` parameter (default is 20, and maximum is 1,000). To limit results to 5, for example, you could do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5\n```\n\n##\n\n`offset` parameter can be used to retrieve items starting from a specific index of the result list. For example, to select the second set of 5 results (i.e. results 6 through 10), you would do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5&offset=5\n```\n\n##\n\n## Deep paging\n\nDeep paging using cursors can be used to iterate over large result sets, without any limits on their size.\n\n##\n\nTo use deep paging make a query as normal, but include the `cursor` parameter with a value of `*`, for example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=*\n```\n\n##\n\nA `next-cursor` field will be provided in the JSON response. To get the next page of results, pass the value of `next-cursor` as the cursor parameter (remember to URL-encode). For example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=<value of next-cursor parameter>\n```\n\n##\n\nClients should check the number of returned items. If the number of returned items is equal to the number of expected rows then the end of the result set has been reached. Using next-cursor beyond this point will result in responses with an empty items list. Cursors expire after 5 minutes if they are not used.\n\n##\n\n## Sample\n\nBeing able to select random results is useful for both testing and sampling. You can use the `sample` parameter to retrieve random results. So, for example, the following selects 10 random works:\n\n##\n```\n\/works?sample=10\n```\n##\n\nNote that when you use the `sample` parameter, the `rows` and `offset` parameters are ignored.\n\n\n## Parameter combinations\n\nAny combination of `query`, `query.*`, `filter`, `facet`, `select` and `sort` can be used with offsets. Sampling cannot be combined with offsets.\n\n##\n\nAny combination of `query`, `query.*`, `filter`, `facet`, `select` and `sort` may also be used with deep paging cursors. `rows` may also be specified.\n\n##\n\n`offset` and `sample` cannot be used in combination with cursors.\n\n##\n","parameters":[{"in":"query","name":"rows","description":"The number of rows per page","required":false,"type":"integer","format":"int64"},{"in":"query","name":"order","description":"Combined with sort can be used to specify the order of results, e.g. asc or desc","required":false,"pattern":"(asc|desc)","type":"string"},{"in":"query","name":"facet","description":"Exposes the ability to retrieve counts for pre-defined facets e.g. `type-name:*` returns counts of all works by type","required":false,"type":"string"},{"in":"query","name":"sample","description":"Exposes the ability to return `N` randomly sampled items","required":false,"type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Exposes the ability to sort results by a certain field, e.g. `score`","required":false,"type":"string"},{"in":"query","name":"offset","description":"The number of rows to skip before returning","required":false,"type":"integer","format":"int64"},{"in":"query","name":"mailto","description":"The email address to identify yourself and be in the \"polite pool\"","required":false,"pattern":"^[A-Za-z0-9._%+-]+@[A-Za-z0-9-]+\\.[A-Za-z]{2,6}$","type":"string"},{"in":"query","name":"select","description":"Exposes the ability to select certain fields, supports a comma separated list of fields, e.g. `DOI,volume`","required":false,"pattern":"^\\w+(,\\w+)*$","type":"string"},{"in":"query","name":"query","description":"Exposes the ability to free text query certain fields","required":false,"type":"string"},{"in":"query","name":"filter","description":"Exposes the ability to filter by certain fields, supports a comma separated list of lucene filters, e.g. `content-domain:psychoceramics.labs.crossref.org`","required":false,"type":"string"},{"in":"query","name":"cursor","description":"Exposes the ability to deep page through large result sets, where offset would cause performance problems","required":false,"type":"string"},{"in":"path","name":"prefix","description":"","required":true,"type":"string"}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/WorksMessage"},"description":"A list of works"}},"tags":["Prefixes"]}},"\/funders\/{id}\/works":{"get":{"description":"Returns list of works associated with the specified {id}.\n## Queries\n\nFree form search queries can be made, for example, works that include `renear` or `ontologies` (or both):\n\n##\n\n```\n\/works?query=renear+ontologies\n```\n\n\n## Field Queries\nField queries allow for queries that match only particular fields of metadata. For example, this query matches records that contain the tokens `richard` or `feynman` (or both) in any author field:\n\n##\n\n```\n\/works?query.author=richard+feynman\n```\n\n##\n\nField queries can be combined with the general `query` parameter and each other. Each query parameter is ANDed with the others:\n\n##\n```\n\/works?query.title=room+at+the+bottom&query.author=richard+feynman\n```\n\n##\n\nThis endpoint supports the following field queries:\n\n##\n\n+ `query.affiliation` - query contributor affiliations\n+ `query.author` - query author given and family names\n+ `query.bibliographic` - query bibliographic information, useful for citation look up, includes titles, authors, ISSNs and publication years\n+ `query.chair` - query chair given and family names\n+ `query.container-title` - query\u00a0container title\u00a0aka. publication name\n+ `query.contributor` - query author, editor, chair and translator given and family names\n+ `query.degree` - query degree\n+ `query.description` - query description\n+ `query.editor` - query editor given and family names\n+ `query.event-acronym` - query acronym of the event\n+ `query.event-location` - query location of the event\n+ `query.event-name` - query name of the event\n+ `query.event-sponsor` - query sponsor of the event\n+ `query.event-theme` - query theme of the event\n+ `query.funder-name` - query name of the funder\n+ `query.publisher-location` - query location of the publisher\n+ `query.publisher-name` - query publisher name\n+ `query.standards-body-acronym` - query acronym of the standards body\n+ `query.standards-body-name` - query standards body name\n+ `query.title` - query title\n+ `query.translator` - query translator given and family names\n## Sort\n\nResults can be sorted by applying the `sort` and `order` parameters. `sort` sets the field by which results will be sorted. `order` sets the result ordering, either `asc` or `desc` (default is `desc`).\n\nAn example that sorts results in order of publication, beginning with the least recent:\n\n##\n\n```\n\/works?query=josiah+carberry&sort=published&order=asc\n```\n\n##\n\nThis endpoint supports sorting by the following elements:\n\n##\n\n+ `created` - sort by created date\n+ `deposited` - sort by time of most recent deposit\n+ `indexed` - sort by time of most recent index\n+ `is-referenced-by-count` - sort by number of times this DOI is referenced by other Crossref DOIs\n+ `issued` - sort by issued date (earliest known publication date)\n+ `published` - sort by publication date\n+ `published-online` - sort by online publication date\n+ `published-print` - sort by print publication date\n+ `references-count` - sort by number of references included in the references section of the document identified by this DOI\n+ `relevance` - sort by relevance score\n+ `score` - sort by relevance score\n+ `updated` - sort by date of most recent change to metadata, currently the same as\u00a0deposited\n## Facets\n\nSummary statistics counts can be retrieved by enabling faceting. Facets are enabled by providing a facet field name along with a maximum number of returned term values, which can be up to 1000. The larger the number of returned values, the longer the query will take. Some facet fields can accept a * as their maximum, which indicates that up to 1000 values can be returned.\n\n\nNote that facet counts use approximation based on assumptions about the data. Some facets count the number of relationships and double-count a record with the same relationship two or more times (e.g. a record with two published Corrections). They may therefore differ from exact counts obtained using filters.\n\n##\n\nFor example, to get facet counts for all work types:\n\n##\n```\n\/works?facet=type-name:*\n```\n\n##\n\nThis endpoint supports the following facets:\n\n##\n\n+ `affiliation` - author affiliation\n+ `archive` - archive location\n+ `assertion` - custom Crossmark assertion name\n+ `assertion-group` - custom Crossmark assertion group name\n+ `category-name` - category name of work\n+ `container-title` - [max value 100], work container title, such as journal title, or book title\n+ `funder-doi` - funder DOI\n+ `funder-name` - funder literal name as deposited alongside DOI\n+ `issn` - [max value 100], journal ISSN (any - print, electronic, link)\n+ `journal-issue` - journal issue number\n+ `journal-volume` - journal volume\n+ `license` - license URI of work\n+ `link-application` - intended application of the full text link\n+ `orcid` - [max value 100], contributor ORCID\n+ `published` - earliest year of publication\n+ `publisher-name` - publisher name of work\n+ `relation-type` - relation type described by work or described by another work with work as object\n+ `ror-id` - institution ROR ID\n+ `source` - source of the DOI\n+ `type-name` - work type name, such as\u00a0journal-article\u00a0or\u00a0book-chapter\n+ `update-type` - significant update type\n## Filters\n\nFilters allow you to select items based on specific criteria. All filter results are lists.\n\n##\n\nFor example:\n\n##\n```\n\/works?filter=type:dataset\n```\n\n### Multiple filters\n\nMultiple filters can be specified in a single query. In such a case, different filters will be applied with AND semantics, while specifying the same filter multiple times will result in OR semantics - that is, specifying the filters:\n\n- `is-update:true`\n- `from-pub-date:2014-03-03`\n- `funder:10.13039\/100000001`\n- `funder:10.13039\/100000050`\n\nwould locate documents that are updates, were published on or after 3rd March 2014 and were funded by either the National Science Foundation (`10.13039\/100000001`) or the National Heart, Lung, and Blood Institute (`10.13039\/100000050`). These filters would be specified by joining each filter together with a comma:\n\n##\n```\n\/works?filter=is-update:true,from-pub-date:2014-03-03,funder:10.13039\/100000001,funder:10.13039\/100000050\n```\n\n### Dot filters\n\nA filter with a dot in its name is special. The dot signifies that the filter will be applied to some other record type that is related to primary resource record type. For example, with work queries, one can filter on works that have an award, where the same award has a particular award number and award-giving funding agency:\n\n##\n```\n\/works?filter=award.number:CBET-0756451,award.funder:10.13039\/100000001\n```\n##\n\nHere we filter on works that have an award by the National Science Foundation that also has the award number `CBET-0756451`.\n\n### Note on dates\n\nThe dates in filters should always be of the form YYYY-MM-DD, YYYY-MM or YYYY. The date filters are inclusive. For example:\n\n* `from-pub-date:2018-09-18` filters works published on or after 18th September 2018\n* `from-created-date:2016-02-29,until-created-date:2016-02-29` filters works first deposited on 29th February 2016\n* `until-created-date:2010-06` filters works first deposited in or before June 2010\n* `from-update-date:2017,until-update-date:2017` filters works with metadata updated in 2017\n\nAlso note that date information in Crossref metadata can often be incomplete. So, for example, a publisher may only include the year and month of publication for a journal article. For a monograph they might just include the year. In these cases the API selects the earliest possible date given the information provided. So, for instance, if the publisher only provided 2013-02 as the published date, then the date would be treated as 2013-02-01. Similarly, if the publisher only provided the year 2013 as the date, it would be treated at 2013-01-01.\n\n### Note on owner prefixes\n\nThe prefix of a Crossref DOI does **NOT** indicate who currently owns the DOI. It only reflects who originally registered the DOI. Crossref metadata has an **prefix** element that records the current owner of the Crossref DOI in question.\n\n##\n\nCrossref also has member IDs for depositing organisations. A single member may control multiple owner prefixes, which in turn may control a number of DOIs. When looking at works published by a certain organisaton, member IDs and the member routes should be used.\n\n### Notes on incremental metadata updates\n\nWhen using time filters to retrieve periodic, incremental metadata updates, the `from-index-date` filter should be used over `from-update-date`, `from-deposit-date`, `from-created-date` and `from-pub-date`. The timestamp that `from-index-date` filters on is guaranteed to be updated every time there is a change to metadata requiring a reindex.\n\n##\n\nThis endpoint supports the following filters:\n\n##\n\n+ `alternative-id` - metadata for records with the given alternative ID, which may be a publisher-specific ID, or any other identifier a publisher may have provided\n+ `archive` - metadata where value of archive partner equals given archive name\n+ `article-number` - metadata for records with a given article number\n+ `assertion` - metadata for records with a given named assertion\n+ `assertion-group` - metadata for records with an assertion in a given group\n+ `award`\n  + `award.funder` - metadata for records with award funder equal to given funder, optionally combine with\u00a0`award.number`\n  + `award.number` - metadata for records with award number equal to given number, optionally combine with\u00a0`award.funder`\n+ `category-name` - metadata for records with category label equal to given name, category labels come from\u00a0the list\u00a0published by Scopus\n+ `citation-id`\n+ `clinical-trial-number` - metadata for records with given clinical trial number\n+ `container-title` - metadata with a publication title that exactly equals given title\n+ `content-domain` - metadata where the publisher records a given domain name as the location Crossmark content will appear\n+ `doi` - metadata describing given DOI\n+ `from-accepted-date` - [date], metadata where accepted date is since given date (inclusive)\n+ `from-approved-date` - [date], metadata where approved date is since given date (inclusive)\n+ `from-awarded-date` - [date], metadata where award date is since given date (inclusive)\n+ `from-created-date` - [date], metadata first deposited since given date (inclusive)\n+ `from-deposit-date` - [date], metadata last (re)deposited since given date (inclusive)\n+ `from-event-end-date` - [date], metadata where event end date is since given date (inclusive)\n+ `from-event-start-date` - [date], metadata where event start date is since given date  (inclusive)\n+ `from-index-date` - [date], metadata indexed since given date (inclusive)\n+ `from-issued-date` - [date], metadata where issued date is since given date  (inclusive)\n+ `from-online-pub-date` - [date], metadata where online published date is since given date (inclusive)\n+ `from-posted-date` - [date], metadata where posted date is since given date (inclusive)\n+ `from-print-pub-date` - [date], metadata where print published date is since given date (inclusive)\n+ `from-pub-date` - [date], metadata where published date is since given date (inclusive)\n+ `from-update-date` - [date], metadata updated since given date (inclusive), currently the same as\u00a0`from-deposit-date`\n+ `full-text`\n  + `full-text.type` - metadata where\u00a0`resource`\u00a0element's\u00a0`content_type`\u00a0attribute equals given version\u00a0mime type\u00a0(e.g.\u00a0application\/pdf)\n  + `full-text.application` - [text-mining,\u00a0similarity-checking\u00a0or\u00a0unspecified], metadata where\u00a0`resource` link has given application\n  + `full-text.version` - metadata where\u00a0`resource`\u00a0element's\u00a0`content_version`\u00a0attribute equals given version\n+ `funder` - metadata which include given funder id\u00a0in FundRef data\n+ `funder-doi-asserted-by` - metadata where funder DOI was asserted by given body\n+ `group-title` - metadata with given group title\n+ `gte-award-amount` - metadata where award is greater than or equals given number\n+ `has-abstract` - [0 or 1], metadata for records with\/without an abstract\n+ `has-affiliation` - [0 or 1], metadata for records with\/without affiliation information\n+ `has-alias`\n+ `has-archive` - [0 or 1], metadata which includes\/does not include name of archive partner\n+ `has-assertion` - [0 or 1], metadata for records with\/without assertions\n+ `has-authenticated-orcid` - [0 or 1], metadata which includes\/does not include one or more ORCIDs where the depositing publisher claims to have witness the ORCID owner authenticate with ORCID\n+ `has-award` - [0 or 1], metadata for records with\/without award\n+ `has-clinical-trial-number` - [0 or 1], metadata for records with\/without a clinical trial number\n+ `has-content-domain` - [0 or 1], metadata where the publisher records\/does not record a domain name location for Crossmark content\n+ `has-description`\n+ `has-domain-restriction` - [0 or 1], metadata where the publisher restricts\/does not restrict Crossmark usage to content domains\n+ `has-event` - [0 or 1], metadata for records with\/without event\n+ `has-full-text` - [0 or 1], metadata that includes\/does not include any full text\u00a0`resource`\u00a0elements\n+ `has-funder` - [0 or 1], metadata which includes\/does not include one or more funder entry\n+ `has-funder-doi` - [0 or 1], metadata for records with\/without funder DOI\n+ `has-license` - [0 or 1], metadata that includes\/does not include any\u00a0`license_ref`\u00a0elements\n+ `has-orcid` - [0 or 1], metadata which includes\/does not include one or more ORCIDs\n+ `has-prime-doi`\n+ `has-references` - [0 or 1], metadata for works that have\/don't have a list of references\n+ `has-relation` - [0 or 1], metadata for records that either assert\/do not assert or are\/are not the object of a relation\n+ `has-ror-id` - [0 or 1], metadata for records with\/without ROR ID\n+ `has-update` - [0 or 1], metadata for records with\/without update information\n+ `has-update-policy` - [0 or 1], metadata for records that include\/do not include a link to an editorial update policy\n+ `is-update` - [0 or 1], metadata for records that represent\/do not represent editorial updates\n+ `isbn` - metadata with given ISBN\n+ `issn` - metadata with given ISSN, format is\u00a0xxxx-xxxx\n+ `license`\n  + `license.url` - metadata where\u00a0`license_ref`\u00a0value equals\u00a0given url\n  + `license.version` - metadata where the\u00a0`license_ref`'s\u00a0`applies_to`\u00a0attribute equals given version\n  + `license.delay` - metadata where difference between publication date and the\u00a0`license_ref`'s\u00a0`start_date`\u00a0attribute is <=\u00a0than given delay\u00a0(in days)\n+ `lte-award-amount` - metadata where award is less than or equals given number\n+ `member` - metadata belonging to a given Crossref member\n+ `orcid` - metadata where\u00a0there is a contributor with given ORCID\n+ `prefix` - metadata belonging to a given DOI owner prefix\u00a0(e.g.\u00a010.1016)\n+ `relation`\n  + `relation.type` - metadata for records with a relation with the given type from the Crossref relations schema (e.g.\u00a0is-referenced-by,\u00a0is-parent-of,\u00a0is-preprint-of)\n  + `relation.object-type` - metadata for records with a relation, where the object type matches given type from the Crossref relations schema (e.g.\u00a0doi,\u00a0issn)\n  + `relation.object` - metadata for records with a relation, where the object identifier matches given identifier\n+ `ror-id` - metadata with given ROR ID\n+ `type` - metadata records whose type equals given type, type must be an ID value from the list of types returned by the\u00a0\/types\u00a0resource\n+ `type-name` - metadata for records with type name equal to given name\n+ `until-accepted-date` - [date], metadata where accepted date is before given date (inclusive)\n+ `until-approved-date` - [date], metadata where approved date is before given date (inclusive)\n+ `until-awarded-date` - [date], metadata where award date is before given date (inclusive)\n+ `until-created-date` - [date], metadata first deposited before given date (inclusive)\n+ `until-deposit-date` - [date], metadata last (re)deposited before given date (inclusive)\n+ `until-event-end-date` - [date], metadata where event end date is before given date (inclusive)\n+ `until-event-start-date` - [date], metadata where event start date is before given date  (inclusive)\n+ `until-index-date` - [date], metadata indexed before given date (inclusive)\n+ `until-issued-date` - [date], metadata where issued date is before given date  (inclusive)\n+ `until-online-pub-date` - [date], metadata where online published date is before given date (inclusive)\n+ `until-posted-date` - [date], metadata where posted date is before given date (inclusive)\n+ `until-print-pub-date` - [date], metadata where print published date is before given date (inclusive)\n+ `until-pub-date` - [date], metadata where published date is before given date (inclusive)\n+ `until-update-date` - [date], metadata updated before given date (inclusive), currently the same as\u00a0`until-deposit-date`\n+ `update-type` - metadata with given update type\n+ `updates` - metadata for records that represent editorial updates to given DOI\n## Elements\n\nCrossref metadata records can be quite large. Sometimes you just want a few elements from the schema. You can \\\"select\\\" a subset of elements to return using the `select` parameter. This can make your API calls much more efficient. For example:\n\n##\n```\n\/works?select=DOI,prefix,title\n```\n\n##\n\nThis endpoint supports selecting the following elements.\n\n##\n\n+ `DOI`\n+ `ISBN`\n+ `ISSN`\n+ `URL`\n+ `abstract`\n+ `accepted`\n+ `alternative-id`\n+ `approved`\n+ `archive`\n+ `article-number`\n+ `assertion`\n+ `author`\n+ `chair`\n+ `clinical-trial-number`\n+ `container-title`\n+ `content-created`\n+ `content-domain`\n+ `created`\n+ `degree`\n+ `deposited`\n+ `editor`\n+ `event`\n+ `funder`\n+ `group-title`\n+ `indexed`\n+ `is-referenced-by-count`\n+ `issn-type`\n+ `issue`\n+ `issued`\n+ `license`\n+ `link`\n+ `member`\n+ `original-title`\n+ `page`\n+ `posted`\n+ `prefix`\n+ `published`\n+ `published-online`\n+ `published-print`\n+ `publisher`\n+ `publisher-location`\n+ `reference`\n+ `references-count`\n+ `relation`\n+ `resource`\n+ `score`\n+ `short-container-title`\n+ `short-title`\n+ `standards-body`\n+ `subject`\n+ `subtitle`\n+ `title`\n+ `translator`\n+ `type`\n+ `update-policy`\n+ `update-to`\n+ `updated-by`\n+ `volume`\n## Pagination with offsets\n\nOffsets are an easy way to iterate over results sets up to 10,000 items. This limit applies to the sum of values of parameters `offset` + `rows`.\n\n##\n\nThe number of items returned in a single response is controlled by `rows` parameter (default is 20, and maximum is 1,000). To limit results to 5, for example, you could do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5\n```\n\n##\n\n`offset` parameter can be used to retrieve items starting from a specific index of the result list. For example, to select the second set of 5 results (i.e. results 6 through 10), you would do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5&offset=5\n```\n\n##\n\n## Deep paging\n\nDeep paging using cursors can be used to iterate over large result sets, without any limits on their size.\n\n##\n\nTo use deep paging make a query as normal, but include the `cursor` parameter with a value of `*`, for example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=*\n```\n\n##\n\nA `next-cursor` field will be provided in the JSON response. To get the next page of results, pass the value of `next-cursor` as the cursor parameter (remember to URL-encode). For example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=<value of next-cursor parameter>\n```\n\n##\n\nClients should check the number of returned items. If the number of returned items is equal to the number of expected rows then the end of the result set has been reached. Using next-cursor beyond this point will result in responses with an empty items list. Cursors expire after 5 minutes if they are not used.\n\n##\n\n## Sample\n\nBeing able to select random results is useful for both testing and sampling. You can use the `sample` parameter to retrieve random results. So, for example, the following selects 10 random works:\n\n##\n```\n\/works?sample=10\n```\n##\n\nNote that when you use the `sample` parameter, the `rows` and `offset` parameters are ignored.\n\n\n## Parameter combinations\n\nAny combination of `query`, `query.*`, `filter`, `facet`, `select` and `sort` can be used with offsets. Sampling cannot be combined with offsets.\n\n##\n\nAny combination of `query`, `query.*`, `filter`, `facet`, `select` and `sort` may also be used with deep paging cursors. `rows` may also be specified.\n\n##\n\n`offset` and `sample` cannot be used in combination with cursors.\n\n##\n","parameters":[{"in":"query","name":"rows","description":"The number of rows per page","required":false,"type":"integer","format":"int64"},{"in":"query","name":"order","description":"Combined with sort can be used to specify the order of results, e.g. asc or desc","required":false,"pattern":"(asc|desc)","type":"string"},{"in":"query","name":"facet","description":"Exposes the ability to retrieve counts for pre-defined facets e.g. `type-name:*` returns counts of all works by type","required":false,"type":"string"},{"in":"query","name":"sample","description":"Exposes the ability to return `N` randomly sampled items","required":false,"type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Exposes the ability to sort results by a certain field, e.g. `score`","required":false,"type":"string"},{"in":"query","name":"offset","description":"The number of rows to skip before returning","required":false,"type":"integer","format":"int64"},{"in":"query","name":"mailto","description":"The email address to identify yourself and be in the \"polite pool\"","required":false,"pattern":"^[A-Za-z0-9._%+-]+@[A-Za-z0-9-]+\\.[A-Za-z]{2,6}$","type":"string"},{"in":"query","name":"select","description":"Exposes the ability to select certain fields, supports a comma separated list of fields, e.g. `DOI,volume`","required":false,"pattern":"^\\w+(,\\w+)*$","type":"string"},{"in":"query","name":"query","description":"Exposes the ability to free text query certain fields","required":false,"type":"string"},{"in":"query","name":"filter","description":"Exposes the ability to filter by certain fields, supports a comma separated list of lucene filters, e.g. `content-domain:psychoceramics.labs.crossref.org`","required":false,"type":"string"},{"in":"query","name":"cursor","description":"Exposes the ability to deep page through large result sets, where offset would cause performance problems","required":false,"type":"string"},{"in":"path","name":"id","description":"The id of the funder","required":true,"type":"string"}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/WorksMessage"},"description":"A list of works"}},"tags":["Funders"]}},"\/journals\/{issn}":{"get":{"description":"Returns information about a journal with the given ISSN, as an example use ISSN 03064530","parameters":[{"in":"path","name":"issn","description":"The ISSN identifier associated with the journal","required":true,"type":"array","items":{"type":"string"}}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/JournalMessage"},"description":"The journal identified by {issn}."},"404":{"description":"The journal identified by {issn} does not exist."}},"tags":["Journals"]}},"\/types\/{id}":{"get":{"description":"Returns information about a metadata work type, as an example use `monograph`","parameters":[{"in":"path","name":"id","description":"","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/TypeMessage"},"description":"The type identified by {id}."},"404":{"description":"The type identified by {id} does not exist."}},"tags":["Types"]}},"\/licenses":{"get":{"description":"Returns a list of licenses.\n## Querying\n\nThis endpoint accepts `query` parameter, which allows for free text querying. The result contains aggregated licenses from the works that match given query.\n\n##\n\nFor example, this request:\n\n##\n\n```\n\/licenses?query=richard+feynman\n```\n\n##\n\nwill first select works matching `richard+feynman`, and aggregate their licenses.\n\n## Pagination with offsets\n\nOffsets are an easy way to iterate over results sets up to 10,000 items. This limit applies to the sum of values of parameters `offset` + `rows`.\n\n##\n\nThe number of items returned in a single response is controlled by `rows` parameter (default is 20, and maximum is 1,000). To limit results to 5, for example, you could do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5\n```\n\n##\n\n`offset` parameter can be used to retrieve items starting from a specific index of the result list. For example, to select the second set of 5 results (i.e. results 6 through 10), you would do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5&offset=5\n```\n\n##\n\n## Deep paging\n\nDeep paging using cursors can be used to iterate over large result sets, without any limits on their size.\n\n##\n\nTo use deep paging make a query as normal, but include the `cursor` parameter with a value of `*`, for example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=*\n```\n\n##\n\nA `next-cursor` field will be provided in the JSON response. To get the next page of results, pass the value of `next-cursor` as the cursor parameter (remember to URL-encode). For example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=<value of next-cursor parameter>\n```\n\n##\n\nClients should check the number of returned items. If the number of returned items is equal to the number of expected rows then the end of the result set has been reached. Using next-cursor beyond this point will result in responses with an empty items list. Cursors expire after 5 minutes if they are not used.\n\n##\n","parameters":[{"in":"query","name":"query","description":"Exposes the ability to free text query certain fields","required":false,"type":"string"},{"in":"query","name":"cursor","description":"Exposes the ability to deep page through large result sets, where offset would cause performance problems","required":false,"type":"string"},{"in":"query","name":"rows","description":"The number of rows per page","required":false,"type":"integer","format":"int64"},{"in":"query","name":"mailto","description":"The email address to identify yourself and be in the \"polite pool\"","required":false,"pattern":"^[A-Za-z0-9._%+-]+@[A-Za-z0-9-]+\\.[A-Za-z]{2,6}$","type":"string"},{"in":"query","name":"offset","description":"The number of rows to skip before returning","required":false,"type":"integer","format":"int64"}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/LicensesMessage"},"description":"A list of licenses"}},"tags":["Licenses"]}},"\/types":{"get":{"description":"Returns a list of valid work types.\n## Pagination with offsets\n\nOffsets can be used to iterate over the results. For this route, the maximum number of available results is 80,000, which in this case allows to retrieve all the indexed items. This limit applies to the sum of values of parameters `offset` + `rows`.\n\n##\n\nThe number of items returned in a single response is controlled by `rows` parameter (default is 20, and maximum is 1,000). To limit results to 5, for example, you could do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5\n```\n\n##\n\n`offset` parameter can be used to retrieve items starting from a specific index of the result list. For example, to select the second set of 5 results (i.e. results 6 through 10), you would do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5&offset=5\n```\n\n##\n","parameters":[{"in":"query","name":"rows","description":"The number of rows per page","required":false,"type":"integer","format":"int64"},{"in":"query","name":"mailto","description":"The email address to identify yourself and be in the \"polite pool\"","required":false,"pattern":"^[A-Za-z0-9._%+-]+@[A-Za-z0-9-]+\\.[A-Za-z]{2,6}$","type":"string"},{"in":"query","name":"offset","description":"The number of rows to skip before returning","required":false,"type":"integer","format":"int64"}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/TypesMessage"},"description":"A collection of types"}},"tags":["Types"]}},"\/works\/{doi}":{"get":{"description":"Returns metadata for the specified Crossref DOI, as an example use DOI 10.5555\/12345678","parameters":[{"in":"path","name":"doi","description":"The DOI identifier associated with the work","required":true,"type":"string"}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/WorkMessage"},"description":"The work identified by {doi}."},"404":{"description":"The work identified by {doi} does not exist."}},"tags":["Works"]}},"\/types\/{id}\/works":{"get":{"description":"returns list of works of type {id}.\n## Queries\n\nFree form search queries can be made, for example, works that include `renear` or `ontologies` (or both):\n\n##\n\n```\n\/works?query=renear+ontologies\n```\n\n\n## Field Queries\nField queries allow for queries that match only particular fields of metadata. For example, this query matches records that contain the tokens `richard` or `feynman` (or both) in any author field:\n\n##\n\n```\n\/works?query.author=richard+feynman\n```\n\n##\n\nField queries can be combined with the general `query` parameter and each other. Each query parameter is ANDed with the others:\n\n##\n```\n\/works?query.title=room+at+the+bottom&query.author=richard+feynman\n```\n\n##\n\nThis endpoint supports the following field queries:\n\n##\n\n+ `query.affiliation` - query contributor affiliations\n+ `query.author` - query author given and family names\n+ `query.bibliographic` - query bibliographic information, useful for citation look up, includes titles, authors, ISSNs and publication years\n+ `query.chair` - query chair given and family names\n+ `query.container-title` - query\u00a0container title\u00a0aka. publication name\n+ `query.contributor` - query author, editor, chair and translator given and family names\n+ `query.degree` - query degree\n+ `query.description` - query description\n+ `query.editor` - query editor given and family names\n+ `query.event-acronym` - query acronym of the event\n+ `query.event-location` - query location of the event\n+ `query.event-name` - query name of the event\n+ `query.event-sponsor` - query sponsor of the event\n+ `query.event-theme` - query theme of the event\n+ `query.funder-name` - query name of the funder\n+ `query.publisher-location` - query location of the publisher\n+ `query.publisher-name` - query publisher name\n+ `query.standards-body-acronym` - query acronym of the standards body\n+ `query.standards-body-name` - query standards body name\n+ `query.title` - query title\n+ `query.translator` - query translator given and family names\n## Sort\n\nResults can be sorted by applying the `sort` and `order` parameters. `sort` sets the field by which results will be sorted. `order` sets the result ordering, either `asc` or `desc` (default is `desc`).\n\nAn example that sorts results in order of publication, beginning with the least recent:\n\n##\n\n```\n\/works?query=josiah+carberry&sort=published&order=asc\n```\n\n##\n\nThis endpoint supports sorting by the following elements:\n\n##\n\n+ `created` - sort by created date\n+ `deposited` - sort by time of most recent deposit\n+ `indexed` - sort by time of most recent index\n+ `is-referenced-by-count` - sort by number of times this DOI is referenced by other Crossref DOIs\n+ `issued` - sort by issued date (earliest known publication date)\n+ `published` - sort by publication date\n+ `published-online` - sort by online publication date\n+ `published-print` - sort by print publication date\n+ `references-count` - sort by number of references included in the references section of the document identified by this DOI\n+ `relevance` - sort by relevance score\n+ `score` - sort by relevance score\n+ `updated` - sort by date of most recent change to metadata, currently the same as\u00a0deposited\n## Facets\n\nSummary statistics counts can be retrieved by enabling faceting. Facets are enabled by providing a facet field name along with a maximum number of returned term values, which can be up to 1000. The larger the number of returned values, the longer the query will take. Some facet fields can accept a * as their maximum, which indicates that up to 1000 values can be returned.\n\n\nNote that facet counts use approximation based on assumptions about the data. Some facets count the number of relationships and double-count a record with the same relationship two or more times (e.g. a record with two published Corrections). They may therefore differ from exact counts obtained using filters.\n\n##\n\nFor example, to get facet counts for all work types:\n\n##\n```\n\/works?facet=type-name:*\n```\n\n##\n\nThis endpoint supports the following facets:\n\n##\n\n+ `affiliation` - author affiliation\n+ `archive` - archive location\n+ `assertion` - custom Crossmark assertion name\n+ `assertion-group` - custom Crossmark assertion group name\n+ `category-name` - category name of work\n+ `container-title` - [max value 100], work container title, such as journal title, or book title\n+ `funder-doi` - funder DOI\n+ `funder-name` - funder literal name as deposited alongside DOI\n+ `issn` - [max value 100], journal ISSN (any - print, electronic, link)\n+ `journal-issue` - journal issue number\n+ `journal-volume` - journal volume\n+ `license` - license URI of work\n+ `link-application` - intended application of the full text link\n+ `orcid` - [max value 100], contributor ORCID\n+ `published` - earliest year of publication\n+ `publisher-name` - publisher name of work\n+ `relation-type` - relation type described by work or described by another work with work as object\n+ `ror-id` - institution ROR ID\n+ `source` - source of the DOI\n+ `type-name` - work type name, such as\u00a0journal-article\u00a0or\u00a0book-chapter\n+ `update-type` - significant update type\n## Filters\n\nFilters allow you to select items based on specific criteria. All filter results are lists.\n\n##\n\nFor example:\n\n##\n```\n\/works?filter=type:dataset\n```\n\n### Multiple filters\n\nMultiple filters can be specified in a single query. In such a case, different filters will be applied with AND semantics, while specifying the same filter multiple times will result in OR semantics - that is, specifying the filters:\n\n- `is-update:true`\n- `from-pub-date:2014-03-03`\n- `funder:10.13039\/100000001`\n- `funder:10.13039\/100000050`\n\nwould locate documents that are updates, were published on or after 3rd March 2014 and were funded by either the National Science Foundation (`10.13039\/100000001`) or the National Heart, Lung, and Blood Institute (`10.13039\/100000050`). These filters would be specified by joining each filter together with a comma:\n\n##\n```\n\/works?filter=is-update:true,from-pub-date:2014-03-03,funder:10.13039\/100000001,funder:10.13039\/100000050\n```\n\n### Dot filters\n\nA filter with a dot in its name is special. The dot signifies that the filter will be applied to some other record type that is related to primary resource record type. For example, with work queries, one can filter on works that have an award, where the same award has a particular award number and award-giving funding agency:\n\n##\n```\n\/works?filter=award.number:CBET-0756451,award.funder:10.13039\/100000001\n```\n##\n\nHere we filter on works that have an award by the National Science Foundation that also has the award number `CBET-0756451`.\n\n### Note on dates\n\nThe dates in filters should always be of the form YYYY-MM-DD, YYYY-MM or YYYY. The date filters are inclusive. For example:\n\n* `from-pub-date:2018-09-18` filters works published on or after 18th September 2018\n* `from-created-date:2016-02-29,until-created-date:2016-02-29` filters works first deposited on 29th February 2016\n* `until-created-date:2010-06` filters works first deposited in or before June 2010\n* `from-update-date:2017,until-update-date:2017` filters works with metadata updated in 2017\n\nAlso note that date information in Crossref metadata can often be incomplete. So, for example, a publisher may only include the year and month of publication for a journal article. For a monograph they might just include the year. In these cases the API selects the earliest possible date given the information provided. So, for instance, if the publisher only provided 2013-02 as the published date, then the date would be treated as 2013-02-01. Similarly, if the publisher only provided the year 2013 as the date, it would be treated at 2013-01-01.\n\n### Note on owner prefixes\n\nThe prefix of a Crossref DOI does **NOT** indicate who currently owns the DOI. It only reflects who originally registered the DOI. Crossref metadata has an **prefix** element that records the current owner of the Crossref DOI in question.\n\n##\n\nCrossref also has member IDs for depositing organisations. A single member may control multiple owner prefixes, which in turn may control a number of DOIs. When looking at works published by a certain organisaton, member IDs and the member routes should be used.\n\n### Notes on incremental metadata updates\n\nWhen using time filters to retrieve periodic, incremental metadata updates, the `from-index-date` filter should be used over `from-update-date`, `from-deposit-date`, `from-created-date` and `from-pub-date`. The timestamp that `from-index-date` filters on is guaranteed to be updated every time there is a change to metadata requiring a reindex.\n\n##\n\nThis endpoint supports the following filters:\n\n##\n\n+ `alternative-id` - metadata for records with the given alternative ID, which may be a publisher-specific ID, or any other identifier a publisher may have provided\n+ `archive` - metadata where value of archive partner equals given archive name\n+ `article-number` - metadata for records with a given article number\n+ `assertion` - metadata for records with a given named assertion\n+ `assertion-group` - metadata for records with an assertion in a given group\n+ `award`\n  + `award.funder` - metadata for records with award funder equal to given funder, optionally combine with\u00a0`award.number`\n  + `award.number` - metadata for records with award number equal to given number, optionally combine with\u00a0`award.funder`\n+ `category-name` - metadata for records with category label equal to given name, category labels come from\u00a0the list\u00a0published by Scopus\n+ `citation-id`\n+ `clinical-trial-number` - metadata for records with given clinical trial number\n+ `container-title` - metadata with a publication title that exactly equals given title\n+ `content-domain` - metadata where the publisher records a given domain name as the location Crossmark content will appear\n+ `doi` - metadata describing given DOI\n+ `from-accepted-date` - [date], metadata where accepted date is since given date (inclusive)\n+ `from-approved-date` - [date], metadata where approved date is since given date (inclusive)\n+ `from-awarded-date` - [date], metadata where award date is since given date (inclusive)\n+ `from-created-date` - [date], metadata first deposited since given date (inclusive)\n+ `from-deposit-date` - [date], metadata last (re)deposited since given date (inclusive)\n+ `from-event-end-date` - [date], metadata where event end date is since given date (inclusive)\n+ `from-event-start-date` - [date], metadata where event start date is since given date  (inclusive)\n+ `from-index-date` - [date], metadata indexed since given date (inclusive)\n+ `from-issued-date` - [date], metadata where issued date is since given date  (inclusive)\n+ `from-online-pub-date` - [date], metadata where online published date is since given date (inclusive)\n+ `from-posted-date` - [date], metadata where posted date is since given date (inclusive)\n+ `from-print-pub-date` - [date], metadata where print published date is since given date (inclusive)\n+ `from-pub-date` - [date], metadata where published date is since given date (inclusive)\n+ `from-update-date` - [date], metadata updated since given date (inclusive), currently the same as\u00a0`from-deposit-date`\n+ `full-text`\n  + `full-text.type` - metadata where\u00a0`resource`\u00a0element's\u00a0`content_type`\u00a0attribute equals given version\u00a0mime type\u00a0(e.g.\u00a0application\/pdf)\n  + `full-text.application` - [text-mining,\u00a0similarity-checking\u00a0or\u00a0unspecified], metadata where\u00a0`resource` link has given application\n  + `full-text.version` - metadata where\u00a0`resource`\u00a0element's\u00a0`content_version`\u00a0attribute equals given version\n+ `funder` - metadata which include given funder id\u00a0in FundRef data\n+ `funder-doi-asserted-by` - metadata where funder DOI was asserted by given body\n+ `group-title` - metadata with given group title\n+ `gte-award-amount` - metadata where award is greater than or equals given number\n+ `has-abstract` - [0 or 1], metadata for records with\/without an abstract\n+ `has-affiliation` - [0 or 1], metadata for records with\/without affiliation information\n+ `has-alias`\n+ `has-archive` - [0 or 1], metadata which includes\/does not include name of archive partner\n+ `has-assertion` - [0 or 1], metadata for records with\/without assertions\n+ `has-authenticated-orcid` - [0 or 1], metadata which includes\/does not include one or more ORCIDs where the depositing publisher claims to have witness the ORCID owner authenticate with ORCID\n+ `has-award` - [0 or 1], metadata for records with\/without award\n+ `has-clinical-trial-number` - [0 or 1], metadata for records with\/without a clinical trial number\n+ `has-content-domain` - [0 or 1], metadata where the publisher records\/does not record a domain name location for Crossmark content\n+ `has-description`\n+ `has-domain-restriction` - [0 or 1], metadata where the publisher restricts\/does not restrict Crossmark usage to content domains\n+ `has-event` - [0 or 1], metadata for records with\/without event\n+ `has-full-text` - [0 or 1], metadata that includes\/does not include any full text\u00a0`resource`\u00a0elements\n+ `has-funder` - [0 or 1], metadata which includes\/does not include one or more funder entry\n+ `has-funder-doi` - [0 or 1], metadata for records with\/without funder DOI\n+ `has-license` - [0 or 1], metadata that includes\/does not include any\u00a0`license_ref`\u00a0elements\n+ `has-orcid` - [0 or 1], metadata which includes\/does not include one or more ORCIDs\n+ `has-prime-doi`\n+ `has-references` - [0 or 1], metadata for works that have\/don't have a list of references\n+ `has-relation` - [0 or 1], metadata for records that either assert\/do not assert or are\/are not the object of a relation\n+ `has-ror-id` - [0 or 1], metadata for records with\/without ROR ID\n+ `has-update` - [0 or 1], metadata for records with\/without update information\n+ `has-update-policy` - [0 or 1], metadata for records that include\/do not include a link to an editorial update policy\n+ `is-update` - [0 or 1], metadata for records that represent\/do not represent editorial updates\n+ `isbn` - metadata with given ISBN\n+ `issn` - metadata with given ISSN, format is\u00a0xxxx-xxxx\n+ `license`\n  + `license.url` - metadata where\u00a0`license_ref`\u00a0value equals\u00a0given url\n  + `license.version` - metadata where the\u00a0`license_ref`'s\u00a0`applies_to`\u00a0attribute equals given version\n  + `license.delay` - metadata where difference between publication date and the\u00a0`license_ref`'s\u00a0`start_date`\u00a0attribute is <=\u00a0than given delay\u00a0(in days)\n+ `lte-award-amount` - metadata where award is less than or equals given number\n+ `member` - metadata belonging to a given Crossref member\n+ `orcid` - metadata where\u00a0there is a contributor with given ORCID\n+ `prefix` - metadata belonging to a given DOI owner prefix\u00a0(e.g.\u00a010.1016)\n+ `relation`\n  + `relation.type` - metadata for records with a relation with the given type from the Crossref relations schema (e.g.\u00a0is-referenced-by,\u00a0is-parent-of,\u00a0is-preprint-of)\n  + `relation.object-type` - metadata for records with a relation, where the object type matches given type from the Crossref relations schema (e.g.\u00a0doi,\u00a0issn)\n  + `relation.object` - metadata for records with a relation, where the object identifier matches given identifier\n+ `ror-id` - metadata with given ROR ID\n+ `type` - metadata records whose type equals given type, type must be an ID value from the list of types returned by the\u00a0\/types\u00a0resource\n+ `type-name` - metadata for records with type name equal to given name\n+ `until-accepted-date` - [date], metadata where accepted date is before given date (inclusive)\n+ `until-approved-date` - [date], metadata where approved date is before given date (inclusive)\n+ `until-awarded-date` - [date], metadata where award date is before given date (inclusive)\n+ `until-created-date` - [date], metadata first deposited before given date (inclusive)\n+ `until-deposit-date` - [date], metadata last (re)deposited before given date (inclusive)\n+ `until-event-end-date` - [date], metadata where event end date is before given date (inclusive)\n+ `until-event-start-date` - [date], metadata where event start date is before given date  (inclusive)\n+ `until-index-date` - [date], metadata indexed before given date (inclusive)\n+ `until-issued-date` - [date], metadata where issued date is before given date  (inclusive)\n+ `until-online-pub-date` - [date], metadata where online published date is before given date (inclusive)\n+ `until-posted-date` - [date], metadata where posted date is before given date (inclusive)\n+ `until-print-pub-date` - [date], metadata where print published date is before given date (inclusive)\n+ `until-pub-date` - [date], metadata where published date is before given date (inclusive)\n+ `until-update-date` - [date], metadata updated before given date (inclusive), currently the same as\u00a0`until-deposit-date`\n+ `update-type` - metadata with given update type\n+ `updates` - metadata for records that represent editorial updates to given DOI\n## Elements\n\nCrossref metadata records can be quite large. Sometimes you just want a few elements from the schema. You can \\\"select\\\" a subset of elements to return using the `select` parameter. This can make your API calls much more efficient. For example:\n\n##\n```\n\/works?select=DOI,prefix,title\n```\n\n##\n\nThis endpoint supports selecting the following elements.\n\n##\n\n+ `DOI`\n+ `ISBN`\n+ `ISSN`\n+ `URL`\n+ `abstract`\n+ `accepted`\n+ `alternative-id`\n+ `approved`\n+ `archive`\n+ `article-number`\n+ `assertion`\n+ `author`\n+ `chair`\n+ `clinical-trial-number`\n+ `container-title`\n+ `content-created`\n+ `content-domain`\n+ `created`\n+ `degree`\n+ `deposited`\n+ `editor`\n+ `event`\n+ `funder`\n+ `group-title`\n+ `indexed`\n+ `is-referenced-by-count`\n+ `issn-type`\n+ `issue`\n+ `issued`\n+ `license`\n+ `link`\n+ `member`\n+ `original-title`\n+ `page`\n+ `posted`\n+ `prefix`\n+ `published`\n+ `published-online`\n+ `published-print`\n+ `publisher`\n+ `publisher-location`\n+ `reference`\n+ `references-count`\n+ `relation`\n+ `resource`\n+ `score`\n+ `short-container-title`\n+ `short-title`\n+ `standards-body`\n+ `subject`\n+ `subtitle`\n+ `title`\n+ `translator`\n+ `type`\n+ `update-policy`\n+ `update-to`\n+ `updated-by`\n+ `volume`\n## Pagination with offsets\n\nOffsets are an easy way to iterate over results sets up to 10,000 items. This limit applies to the sum of values of parameters `offset` + `rows`.\n\n##\n\nThe number of items returned in a single response is controlled by `rows` parameter (default is 20, and maximum is 1,000). To limit results to 5, for example, you could do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5\n```\n\n##\n\n`offset` parameter can be used to retrieve items starting from a specific index of the result list. For example, to select the second set of 5 results (i.e. results 6 through 10), you would do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5&offset=5\n```\n\n##\n\n## Deep paging\n\nDeep paging using cursors can be used to iterate over large result sets, without any limits on their size.\n\n##\n\nTo use deep paging make a query as normal, but include the `cursor` parameter with a value of `*`, for example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=*\n```\n\n##\n\nA `next-cursor` field will be provided in the JSON response. To get the next page of results, pass the value of `next-cursor` as the cursor parameter (remember to URL-encode). For example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=<value of next-cursor parameter>\n```\n\n##\n\nClients should check the number of returned items. If the number of returned items is equal to the number of expected rows then the end of the result set has been reached. Using next-cursor beyond this point will result in responses with an empty items list. Cursors expire after 5 minutes if they are not used.\n\n##\n\n## Sample\n\nBeing able to select random results is useful for both testing and sampling. You can use the `sample` parameter to retrieve random results. So, for example, the following selects 10 random works:\n\n##\n```\n\/works?sample=10\n```\n##\n\nNote that when you use the `sample` parameter, the `rows` and `offset` parameters are ignored.\n\n\n## Parameter combinations\n\nAny combination of `query`, `query.*`, `filter`, `facet`, `select` and `sort` can be used with offsets. Sampling cannot be combined with offsets.\n\n##\n\nAny combination of `query`, `query.*`, `filter`, `facet`, `select` and `sort` may also be used with deep paging cursors. `rows` may also be specified.\n\n##\n\n`offset` and `sample` cannot be used in combination with cursors.\n\n##\n","parameters":[{"in":"query","name":"rows","description":"The number of rows per page","required":false,"type":"integer","format":"int64"},{"in":"query","name":"order","description":"Combined with sort can be used to specify the order of results, e.g. asc or desc","required":false,"pattern":"(asc|desc)","type":"string"},{"in":"query","name":"facet","description":"Exposes the ability to retrieve counts for pre-defined facets e.g. `type-name:*` returns counts of all works by type","required":false,"type":"string"},{"in":"query","name":"sample","description":"Exposes the ability to return `N` randomly sampled items","required":false,"type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Exposes the ability to sort results by a certain field, e.g. `score`","required":false,"type":"string"},{"in":"query","name":"offset","description":"The number of rows to skip before returning","required":false,"type":"integer","format":"int64"},{"in":"query","name":"mailto","description":"The email address to identify yourself and be in the \"polite pool\"","required":false,"pattern":"^[A-Za-z0-9._%+-]+@[A-Za-z0-9-]+\\.[A-Za-z]{2,6}$","type":"string"},{"in":"query","name":"select","description":"Exposes the ability to select certain fields, supports a comma separated list of fields, e.g. `DOI,volume`","required":false,"pattern":"^\\w+(,\\w+)*$","type":"string"},{"in":"query","name":"query","description":"Exposes the ability to free text query certain fields","required":false,"type":"string"},{"in":"query","name":"filter","description":"Exposes the ability to filter by certain fields, supports a comma separated list of lucene filters, e.g. `content-domain:psychoceramics.labs.crossref.org`","required":false,"type":"string"},{"in":"query","name":"cursor","description":"Exposes the ability to deep page through large result sets, where offset would cause performance problems","required":false,"type":"string"},{"in":"path","name":"id","description":"","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/WorksMessage"},"description":"A list of works"}},"tags":["Types"]}},"\/works":{"get":{"description":"Returns a list of all works (journal articles, conference proceedings, books, components, etc), 20 per page.\n## Queries\n\nFree form search queries can be made, for example, works that include `renear` or `ontologies` (or both):\n\n##\n\n```\n\/works?query=renear+ontologies\n```\n\n\n## Field Queries\nField queries allow for queries that match only particular fields of metadata. For example, this query matches records that contain the tokens `richard` or `feynman` (or both) in any author field:\n\n##\n\n```\n\/works?query.author=richard+feynman\n```\n\n##\n\nField queries can be combined with the general `query` parameter and each other. Each query parameter is ANDed with the others:\n\n##\n```\n\/works?query.title=room+at+the+bottom&query.author=richard+feynman\n```\n\n##\n\nThis endpoint supports the following field queries:\n\n##\n\n+ `query.affiliation` - query contributor affiliations\n+ `query.author` - query author given and family names\n+ `query.bibliographic` - query bibliographic information, useful for citation look up, includes titles, authors, ISSNs and publication years\n+ `query.chair` - query chair given and family names\n+ `query.container-title` - query\u00a0container title\u00a0aka. publication name\n+ `query.contributor` - query author, editor, chair and translator given and family names\n+ `query.degree` - query degree\n+ `query.description` - query description\n+ `query.editor` - query editor given and family names\n+ `query.event-acronym` - query acronym of the event\n+ `query.event-location` - query location of the event\n+ `query.event-name` - query name of the event\n+ `query.event-sponsor` - query sponsor of the event\n+ `query.event-theme` - query theme of the event\n+ `query.funder-name` - query name of the funder\n+ `query.publisher-location` - query location of the publisher\n+ `query.publisher-name` - query publisher name\n+ `query.standards-body-acronym` - query acronym of the standards body\n+ `query.standards-body-name` - query standards body name\n+ `query.title` - query title\n+ `query.translator` - query translator given and family names\n## Sort\n\nResults can be sorted by applying the `sort` and `order` parameters. `sort` sets the field by which results will be sorted. `order` sets the result ordering, either `asc` or `desc` (default is `desc`).\n\nAn example that sorts results in order of publication, beginning with the least recent:\n\n##\n\n```\n\/works?query=josiah+carberry&sort=published&order=asc\n```\n\n##\n\nThis endpoint supports sorting by the following elements:\n\n##\n\n+ `created` - sort by created date\n+ `deposited` - sort by time of most recent deposit\n+ `indexed` - sort by time of most recent index\n+ `is-referenced-by-count` - sort by number of times this DOI is referenced by other Crossref DOIs\n+ `issued` - sort by issued date (earliest known publication date)\n+ `published` - sort by publication date\n+ `published-online` - sort by online publication date\n+ `published-print` - sort by print publication date\n+ `references-count` - sort by number of references included in the references section of the document identified by this DOI\n+ `relevance` - sort by relevance score\n+ `score` - sort by relevance score\n+ `updated` - sort by date of most recent change to metadata, currently the same as\u00a0deposited\n## Facets\n\nSummary statistics counts can be retrieved by enabling faceting. Facets are enabled by providing a facet field name along with a maximum number of returned term values, which can be up to 1000. The larger the number of returned values, the longer the query will take. Some facet fields can accept a * as their maximum, which indicates that up to 1000 values can be returned.\n\n\nNote that facet counts use approximation based on assumptions about the data. Some facets count the number of relationships and double-count a record with the same relationship two or more times (e.g. a record with two published Corrections). They may therefore differ from exact counts obtained using filters.\n\n##\n\nFor example, to get facet counts for all work types:\n\n##\n```\n\/works?facet=type-name:*\n```\n\n##\n\nThis endpoint supports the following facets:\n\n##\n\n+ `affiliation` - author affiliation\n+ `archive` - archive location\n+ `assertion` - custom Crossmark assertion name\n+ `assertion-group` - custom Crossmark assertion group name\n+ `category-name` - category name of work\n+ `container-title` - [max value 100], work container title, such as journal title, or book title\n+ `funder-doi` - funder DOI\n+ `funder-name` - funder literal name as deposited alongside DOI\n+ `issn` - [max value 100], journal ISSN (any - print, electronic, link)\n+ `journal-issue` - journal issue number\n+ `journal-volume` - journal volume\n+ `license` - license URI of work\n+ `link-application` - intended application of the full text link\n+ `orcid` - [max value 100], contributor ORCID\n+ `published` - earliest year of publication\n+ `publisher-name` - publisher name of work\n+ `relation-type` - relation type described by work or described by another work with work as object\n+ `ror-id` - institution ROR ID\n+ `source` - source of the DOI\n+ `type-name` - work type name, such as\u00a0journal-article\u00a0or\u00a0book-chapter\n+ `update-type` - significant update type\n## Filters\n\nFilters allow you to select items based on specific criteria. All filter results are lists.\n\n##\n\nFor example:\n\n##\n```\n\/works?filter=type:dataset\n```\n\n### Multiple filters\n\nMultiple filters can be specified in a single query. In such a case, different filters will be applied with AND semantics, while specifying the same filter multiple times will result in OR semantics - that is, specifying the filters:\n\n- `is-update:true`\n- `from-pub-date:2014-03-03`\n- `funder:10.13039\/100000001`\n- `funder:10.13039\/100000050`\n\nwould locate documents that are updates, were published on or after 3rd March 2014 and were funded by either the National Science Foundation (`10.13039\/100000001`) or the National Heart, Lung, and Blood Institute (`10.13039\/100000050`). These filters would be specified by joining each filter together with a comma:\n\n##\n```\n\/works?filter=is-update:true,from-pub-date:2014-03-03,funder:10.13039\/100000001,funder:10.13039\/100000050\n```\n\n### Dot filters\n\nA filter with a dot in its name is special. The dot signifies that the filter will be applied to some other record type that is related to primary resource record type. For example, with work queries, one can filter on works that have an award, where the same award has a particular award number and award-giving funding agency:\n\n##\n```\n\/works?filter=award.number:CBET-0756451,award.funder:10.13039\/100000001\n```\n##\n\nHere we filter on works that have an award by the National Science Foundation that also has the award number `CBET-0756451`.\n\n### Note on dates\n\nThe dates in filters should always be of the form YYYY-MM-DD, YYYY-MM or YYYY. The date filters are inclusive. For example:\n\n* `from-pub-date:2018-09-18` filters works published on or after 18th September 2018\n* `from-created-date:2016-02-29,until-created-date:2016-02-29` filters works first deposited on 29th February 2016\n* `until-created-date:2010-06` filters works first deposited in or before June 2010\n* `from-update-date:2017,until-update-date:2017` filters works with metadata updated in 2017\n\nAlso note that date information in Crossref metadata can often be incomplete. So, for example, a publisher may only include the year and month of publication for a journal article. For a monograph they might just include the year. In these cases the API selects the earliest possible date given the information provided. So, for instance, if the publisher only provided 2013-02 as the published date, then the date would be treated as 2013-02-01. Similarly, if the publisher only provided the year 2013 as the date, it would be treated at 2013-01-01.\n\n### Note on owner prefixes\n\nThe prefix of a Crossref DOI does **NOT** indicate who currently owns the DOI. It only reflects who originally registered the DOI. Crossref metadata has an **prefix** element that records the current owner of the Crossref DOI in question.\n\n##\n\nCrossref also has member IDs for depositing organisations. A single member may control multiple owner prefixes, which in turn may control a number of DOIs. When looking at works published by a certain organisaton, member IDs and the member routes should be used.\n\n### Notes on incremental metadata updates\n\nWhen using time filters to retrieve periodic, incremental metadata updates, the `from-index-date` filter should be used over `from-update-date`, `from-deposit-date`, `from-created-date` and `from-pub-date`. The timestamp that `from-index-date` filters on is guaranteed to be updated every time there is a change to metadata requiring a reindex.\n\n##\n\nThis endpoint supports the following filters:\n\n##\n\n+ `alternative-id` - metadata for records with the given alternative ID, which may be a publisher-specific ID, or any other identifier a publisher may have provided\n+ `archive` - metadata where value of archive partner equals given archive name\n+ `article-number` - metadata for records with a given article number\n+ `assertion` - metadata for records with a given named assertion\n+ `assertion-group` - metadata for records with an assertion in a given group\n+ `award`\n  + `award.funder` - metadata for records with award funder equal to given funder, optionally combine with\u00a0`award.number`\n  + `award.number` - metadata for records with award number equal to given number, optionally combine with\u00a0`award.funder`\n+ `category-name` - metadata for records with category label equal to given name, category labels come from\u00a0the list\u00a0published by Scopus\n+ `citation-id`\n+ `clinical-trial-number` - metadata for records with given clinical trial number\n+ `container-title` - metadata with a publication title that exactly equals given title\n+ `content-domain` - metadata where the publisher records a given domain name as the location Crossmark content will appear\n+ `doi` - metadata describing given DOI\n+ `from-accepted-date` - [date], metadata where accepted date is since given date (inclusive)\n+ `from-approved-date` - [date], metadata where approved date is since given date (inclusive)\n+ `from-awarded-date` - [date], metadata where award date is since given date (inclusive)\n+ `from-created-date` - [date], metadata first deposited since given date (inclusive)\n+ `from-deposit-date` - [date], metadata last (re)deposited since given date (inclusive)\n+ `from-event-end-date` - [date], metadata where event end date is since given date (inclusive)\n+ `from-event-start-date` - [date], metadata where event start date is since given date  (inclusive)\n+ `from-index-date` - [date], metadata indexed since given date (inclusive)\n+ `from-issued-date` - [date], metadata where issued date is since given date  (inclusive)\n+ `from-online-pub-date` - [date], metadata where online published date is since given date (inclusive)\n+ `from-posted-date` - [date], metadata where posted date is since given date (inclusive)\n+ `from-print-pub-date` - [date], metadata where print published date is since given date (inclusive)\n+ `from-pub-date` - [date], metadata where published date is since given date (inclusive)\n+ `from-update-date` - [date], metadata updated since given date (inclusive), currently the same as\u00a0`from-deposit-date`\n+ `full-text`\n  + `full-text.type` - metadata where\u00a0`resource`\u00a0element's\u00a0`content_type`\u00a0attribute equals given version\u00a0mime type\u00a0(e.g.\u00a0application\/pdf)\n  + `full-text.application` - [text-mining,\u00a0similarity-checking\u00a0or\u00a0unspecified], metadata where\u00a0`resource` link has given application\n  + `full-text.version` - metadata where\u00a0`resource`\u00a0element's\u00a0`content_version`\u00a0attribute equals given version\n+ `funder` - metadata which include given funder id\u00a0in FundRef data\n+ `funder-doi-asserted-by` - metadata where funder DOI was asserted by given body\n+ `group-title` - metadata with given group title\n+ `gte-award-amount` - metadata where award is greater than or equals given number\n+ `has-abstract` - [0 or 1], metadata for records with\/without an abstract\n+ `has-affiliation` - [0 or 1], metadata for records with\/without affiliation information\n+ `has-alias`\n+ `has-archive` - [0 or 1], metadata which includes\/does not include name of archive partner\n+ `has-assertion` - [0 or 1], metadata for records with\/without assertions\n+ `has-authenticated-orcid` - [0 or 1], metadata which includes\/does not include one or more ORCIDs where the depositing publisher claims to have witness the ORCID owner authenticate with ORCID\n+ `has-award` - [0 or 1], metadata for records with\/without award\n+ `has-clinical-trial-number` - [0 or 1], metadata for records with\/without a clinical trial number\n+ `has-content-domain` - [0 or 1], metadata where the publisher records\/does not record a domain name location for Crossmark content\n+ `has-description`\n+ `has-domain-restriction` - [0 or 1], metadata where the publisher restricts\/does not restrict Crossmark usage to content domains\n+ `has-event` - [0 or 1], metadata for records with\/without event\n+ `has-full-text` - [0 or 1], metadata that includes\/does not include any full text\u00a0`resource`\u00a0elements\n+ `has-funder` - [0 or 1], metadata which includes\/does not include one or more funder entry\n+ `has-funder-doi` - [0 or 1], metadata for records with\/without funder DOI\n+ `has-license` - [0 or 1], metadata that includes\/does not include any\u00a0`license_ref`\u00a0elements\n+ `has-orcid` - [0 or 1], metadata which includes\/does not include one or more ORCIDs\n+ `has-prime-doi`\n+ `has-references` - [0 or 1], metadata for works that have\/don't have a list of references\n+ `has-relation` - [0 or 1], metadata for records that either assert\/do not assert or are\/are not the object of a relation\n+ `has-ror-id` - [0 or 1], metadata for records with\/without ROR ID\n+ `has-update` - [0 or 1], metadata for records with\/without update information\n+ `has-update-policy` - [0 or 1], metadata for records that include\/do not include a link to an editorial update policy\n+ `is-update` - [0 or 1], metadata for records that represent\/do not represent editorial updates\n+ `isbn` - metadata with given ISBN\n+ `issn` - metadata with given ISSN, format is\u00a0xxxx-xxxx\n+ `license`\n  + `license.url` - metadata where\u00a0`license_ref`\u00a0value equals\u00a0given url\n  + `license.version` - metadata where the\u00a0`license_ref`'s\u00a0`applies_to`\u00a0attribute equals given version\n  + `license.delay` - metadata where difference between publication date and the\u00a0`license_ref`'s\u00a0`start_date`\u00a0attribute is <=\u00a0than given delay\u00a0(in days)\n+ `lte-award-amount` - metadata where award is less than or equals given number\n+ `member` - metadata belonging to a given Crossref member\n+ `orcid` - metadata where\u00a0there is a contributor with given ORCID\n+ `prefix` - metadata belonging to a given DOI owner prefix\u00a0(e.g.\u00a010.1016)\n+ `relation`\n  + `relation.type` - metadata for records with a relation with the given type from the Crossref relations schema (e.g.\u00a0is-referenced-by,\u00a0is-parent-of,\u00a0is-preprint-of)\n  + `relation.object-type` - metadata for records with a relation, where the object type matches given type from the Crossref relations schema (e.g.\u00a0doi,\u00a0issn)\n  + `relation.object` - metadata for records with a relation, where the object identifier matches given identifier\n+ `ror-id` - metadata with given ROR ID\n+ `type` - metadata records whose type equals given type, type must be an ID value from the list of types returned by the\u00a0\/types\u00a0resource\n+ `type-name` - metadata for records with type name equal to given name\n+ `until-accepted-date` - [date], metadata where accepted date is before given date (inclusive)\n+ `until-approved-date` - [date], metadata where approved date is before given date (inclusive)\n+ `until-awarded-date` - [date], metadata where award date is before given date (inclusive)\n+ `until-created-date` - [date], metadata first deposited before given date (inclusive)\n+ `until-deposit-date` - [date], metadata last (re)deposited before given date (inclusive)\n+ `until-event-end-date` - [date], metadata where event end date is before given date (inclusive)\n+ `until-event-start-date` - [date], metadata where event start date is before given date  (inclusive)\n+ `until-index-date` - [date], metadata indexed before given date (inclusive)\n+ `until-issued-date` - [date], metadata where issued date is before given date  (inclusive)\n+ `until-online-pub-date` - [date], metadata where online published date is before given date (inclusive)\n+ `until-posted-date` - [date], metadata where posted date is before given date (inclusive)\n+ `until-print-pub-date` - [date], metadata where print published date is before given date (inclusive)\n+ `until-pub-date` - [date], metadata where published date is before given date (inclusive)\n+ `until-update-date` - [date], metadata updated before given date (inclusive), currently the same as\u00a0`until-deposit-date`\n+ `update-type` - metadata with given update type\n+ `updates` - metadata for records that represent editorial updates to given DOI\n## Elements\n\nCrossref metadata records can be quite large. Sometimes you just want a few elements from the schema. You can \\\"select\\\" a subset of elements to return using the `select` parameter. This can make your API calls much more efficient. For example:\n\n##\n```\n\/works?select=DOI,prefix,title\n```\n\n##\n\nThis endpoint supports selecting the following elements.\n\n##\n\n+ `DOI`\n+ `ISBN`\n+ `ISSN`\n+ `URL`\n+ `abstract`\n+ `accepted`\n+ `alternative-id`\n+ `approved`\n+ `archive`\n+ `article-number`\n+ `assertion`\n+ `author`\n+ `chair`\n+ `clinical-trial-number`\n+ `container-title`\n+ `content-created`\n+ `content-domain`\n+ `created`\n+ `degree`\n+ `deposited`\n+ `editor`\n+ `event`\n+ `funder`\n+ `group-title`\n+ `indexed`\n+ `is-referenced-by-count`\n+ `issn-type`\n+ `issue`\n+ `issued`\n+ `license`\n+ `link`\n+ `member`\n+ `original-title`\n+ `page`\n+ `posted`\n+ `prefix`\n+ `published`\n+ `published-online`\n+ `published-print`\n+ `publisher`\n+ `publisher-location`\n+ `reference`\n+ `references-count`\n+ `relation`\n+ `resource`\n+ `score`\n+ `short-container-title`\n+ `short-title`\n+ `standards-body`\n+ `subject`\n+ `subtitle`\n+ `title`\n+ `translator`\n+ `type`\n+ `update-policy`\n+ `update-to`\n+ `updated-by`\n+ `volume`\n## Pagination with offsets\n\nOffsets are an easy way to iterate over results sets up to 10,000 items. This limit applies to the sum of values of parameters `offset` + `rows`.\n\n##\n\nThe number of items returned in a single response is controlled by `rows` parameter (default is 20, and maximum is 1,000). To limit results to 5, for example, you could do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5\n```\n\n##\n\n`offset` parameter can be used to retrieve items starting from a specific index of the result list. For example, to select the second set of 5 results (i.e. results 6 through 10), you would do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5&offset=5\n```\n\n##\n\n## Deep paging\n\nDeep paging using cursors can be used to iterate over large result sets, without any limits on their size.\n\n##\n\nTo use deep paging make a query as normal, but include the `cursor` parameter with a value of `*`, for example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=*\n```\n\n##\n\nA `next-cursor` field will be provided in the JSON response. To get the next page of results, pass the value of `next-cursor` as the cursor parameter (remember to URL-encode). For example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=<value of next-cursor parameter>\n```\n\n##\n\nClients should check the number of returned items. If the number of returned items is equal to the number of expected rows then the end of the result set has been reached. Using next-cursor beyond this point will result in responses with an empty items list. Cursors expire after 5 minutes if they are not used.\n\n##\n\n## Sample\n\nBeing able to select random results is useful for both testing and sampling. You can use the `sample` parameter to retrieve random results. So, for example, the following selects 10 random works:\n\n##\n```\n\/works?sample=10\n```\n##\n\nNote that when you use the `sample` parameter, the `rows` and `offset` parameters are ignored.\n\n\n## Parameter combinations\n\nAny combination of `query`, `query.*`, `filter`, `facet`, `select` and `sort` can be used with offsets. Sampling cannot be combined with offsets.\n\n##\n\nAny combination of `query`, `query.*`, `filter`, `facet`, `select` and `sort` may also be used with deep paging cursors. `rows` may also be specified.\n\n##\n\n`offset` and `sample` cannot be used in combination with cursors.\n\n##\n","parameters":[{"in":"query","name":"rows","description":"The number of rows per page","required":false,"type":"integer","format":"int64"},{"in":"query","name":"order","description":"Combined with sort can be used to specify the order of results, e.g. asc or desc","required":false,"pattern":"(asc|desc)","type":"string"},{"in":"query","name":"facet","description":"Exposes the ability to retrieve counts for pre-defined facets e.g. `type-name:*` returns counts of all works by type","required":false,"type":"string"},{"in":"query","name":"sample","description":"Exposes the ability to return `N` randomly sampled items","required":false,"type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Exposes the ability to sort results by a certain field, e.g. `score`","required":false,"type":"string"},{"in":"query","name":"offset","description":"The number of rows to skip before returning","required":false,"type":"integer","format":"int64"},{"in":"query","name":"mailto","description":"The email address to identify yourself and be in the \"polite pool\"","required":false,"pattern":"^[A-Za-z0-9._%+-]+@[A-Za-z0-9-]+\\.[A-Za-z]{2,6}$","type":"string"},{"in":"query","name":"select","description":"Exposes the ability to select certain fields, supports a comma separated list of fields, e.g. `DOI,volume`","required":false,"pattern":"^\\w+(,\\w+)*$","type":"string"},{"in":"query","name":"query","description":"Exposes the ability to free text query certain fields","required":false,"type":"string"},{"in":"query","name":"filter","description":"Exposes the ability to filter by certain fields, supports a comma separated list of lucene filters, e.g. `content-domain:psychoceramics.labs.crossref.org`","required":false,"type":"string"},{"in":"query","name":"cursor","description":"Exposes the ability to deep page through large result sets, where offset would cause performance problems","required":false,"type":"string"}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/WorksMessage"},"description":"A list of works"}},"tags":["Works"]}},"\/works\/{doi}\/agency":{"get":{"description":"Gets the agency associated with a specific work by its DOI, as an example use DOI 10.5555\/12345678","parameters":[{"in":"path","name":"doi","description":"The DOI identifier associated with the work","required":true,"type":"string"}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/AgencyMessage"},"description":"The agency associated with work identified by {doi}."},"404":{"description":"The work identified by {doi} does not exist."}},"tags":["Works"]}},"\/members":{"get":{"description":"Returns a list of all Crossref members (mostly publishers).\n## Queries\n\nFree form search queries can be made, for example, funders that include `association` and `library`:\n\n##\n\n```\n\/members?query=association+library\n```\n\n\n## Filters\n\nFilters allow you to select items based on specific criteria. All filter results are lists.\n\n##\n\nExample:\n\n##\n```\n\/members?filter=current-doi-count:0\n```\n##\n\n### Multiple filters\n\nMultiple filters can be specified in a single query. In such a case, different filters will be applied with AND semantics, while specifying the same filter multiple times will result in OR semantics - that is, specifying the filters:\n\n- `current-doi-count:0`\n- `backfile-doi-count:0`\n- `prefix:10.1296`\n- `prefix:10.2481`\n\nwould locate members with no current DOIs and no backfile DOIs and with prefix 10.1296 or 10.2481. These filters would be specified by joining each filter together with a comma:\n\n##\n```\n\/members?filter=current-doi-count:0,backfile-doi-count:0,prefix:10.1296,prefix:10.2481\n```\n##\n\nThis endpoint supports the following filters:\n\n##\n\n+ `backfile-doi-count` - members with given count of DOIs for material published more than two years ago\n+ `current-doi-count` - members with given count of DOIs for material published within last two years\n+ `prefix` - members with given prefix\n## Pagination with offsets\n\nOffsets can be used to iterate over the results. For this route, the maximum number of available results is 80,000, which in this case allows to retrieve all the indexed items. This limit applies to the sum of values of parameters `offset` + `rows`.\n\n##\n\nThe number of items returned in a single response is controlled by `rows` parameter (default is 20, and maximum is 1,000). To limit results to 5, for example, you could do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5\n```\n\n##\n\n`offset` parameter can be used to retrieve items starting from a specific index of the result list. For example, to select the second set of 5 results (i.e. results 6 through 10), you would do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5&offset=5\n```\n\n##\n\n## Deep paging\n\nDeep paging using cursors can be used to iterate over large result sets, without any limits on their size.\n\n##\n\nTo use deep paging make a query as normal, but include the `cursor` parameter with a value of `*`, for example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=*\n```\n\n##\n\nA `next-cursor` field will be provided in the JSON response. To get the next page of results, pass the value of `next-cursor` as the cursor parameter (remember to URL-encode). For example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=<value of next-cursor parameter>\n```\n\n##\n\nClients should check the number of returned items. If the number of returned items is equal to the number of expected rows then the end of the result set has been reached. Using next-cursor beyond this point will result in responses with an empty items list. Cursors expire after 5 minutes if they are not used.\n\n##\n","parameters":[{"in":"query","name":"cursor","description":"Exposes the ability to deep page through large result sets, where offset would cause performance problems","required":false,"type":"string"},{"in":"query","name":"filter","description":"Exposes the ability to filter by certain fields, supports a comma separated list of lucene filters, e.g. `content-domain:psychoceramics.labs.crossref.org`","required":false,"type":"string"},{"in":"query","name":"query","description":"Exposes the ability to free text query certain fields","required":false,"type":"string"},{"in":"query","name":"rows","description":"The number of rows per page","required":false,"type":"integer","format":"int64"},{"in":"query","name":"mailto","description":"The email address to identify yourself and be in the \"polite pool\"","required":false,"pattern":"^[A-Za-z0-9._%+-]+@[A-Za-z0-9-]+\\.[A-Za-z]{2,6}$","type":"string"},{"in":"query","name":"offset","description":"The number of rows to skip before returning","required":false,"type":"integer","format":"int64"}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/MembersMessage"},"description":"A collection of members"}},"tags":["Members"]}},"\/journals\/{issn}\/works":{"get":{"description":"Returns a list of works in the journal identified by {issn}.\n## Queries\n\nFree form search queries can be made, for example, works that include `renear` or `ontologies` (or both):\n\n##\n\n```\n\/works?query=renear+ontologies\n```\n\n\n## Field Queries\nField queries allow for queries that match only particular fields of metadata. For example, this query matches records that contain the tokens `richard` or `feynman` (or both) in any author field:\n\n##\n\n```\n\/works?query.author=richard+feynman\n```\n\n##\n\nField queries can be combined with the general `query` parameter and each other. Each query parameter is ANDed with the others:\n\n##\n```\n\/works?query.title=room+at+the+bottom&query.author=richard+feynman\n```\n\n##\n\nThis endpoint supports the following field queries:\n\n##\n\n+ `query.affiliation` - query contributor affiliations\n+ `query.author` - query author given and family names\n+ `query.bibliographic` - query bibliographic information, useful for citation look up, includes titles, authors, ISSNs and publication years\n+ `query.chair` - query chair given and family names\n+ `query.container-title` - query\u00a0container title\u00a0aka. publication name\n+ `query.contributor` - query author, editor, chair and translator given and family names\n+ `query.degree` - query degree\n+ `query.description` - query description\n+ `query.editor` - query editor given and family names\n+ `query.event-acronym` - query acronym of the event\n+ `query.event-location` - query location of the event\n+ `query.event-name` - query name of the event\n+ `query.event-sponsor` - query sponsor of the event\n+ `query.event-theme` - query theme of the event\n+ `query.funder-name` - query name of the funder\n+ `query.publisher-location` - query location of the publisher\n+ `query.publisher-name` - query publisher name\n+ `query.standards-body-acronym` - query acronym of the standards body\n+ `query.standards-body-name` - query standards body name\n+ `query.title` - query title\n+ `query.translator` - query translator given and family names\n## Sort\n\nResults can be sorted by applying the `sort` and `order` parameters. `sort` sets the field by which results will be sorted. `order` sets the result ordering, either `asc` or `desc` (default is `desc`).\n\nAn example that sorts results in order of publication, beginning with the least recent:\n\n##\n\n```\n\/works?query=josiah+carberry&sort=published&order=asc\n```\n\n##\n\nThis endpoint supports sorting by the following elements:\n\n##\n\n+ `created` - sort by created date\n+ `deposited` - sort by time of most recent deposit\n+ `indexed` - sort by time of most recent index\n+ `is-referenced-by-count` - sort by number of times this DOI is referenced by other Crossref DOIs\n+ `issued` - sort by issued date (earliest known publication date)\n+ `published` - sort by publication date\n+ `published-online` - sort by online publication date\n+ `published-print` - sort by print publication date\n+ `references-count` - sort by number of references included in the references section of the document identified by this DOI\n+ `relevance` - sort by relevance score\n+ `score` - sort by relevance score\n+ `updated` - sort by date of most recent change to metadata, currently the same as\u00a0deposited\n## Facets\n\nSummary statistics counts can be retrieved by enabling faceting. Facets are enabled by providing a facet field name along with a maximum number of returned term values, which can be up to 1000. The larger the number of returned values, the longer the query will take. Some facet fields can accept a * as their maximum, which indicates that up to 1000 values can be returned.\n\n\nNote that facet counts use approximation based on assumptions about the data. Some facets count the number of relationships and double-count a record with the same relationship two or more times (e.g. a record with two published Corrections). They may therefore differ from exact counts obtained using filters.\n\n##\n\nFor example, to get facet counts for all work types:\n\n##\n```\n\/works?facet=type-name:*\n```\n\n##\n\nThis endpoint supports the following facets:\n\n##\n\n+ `affiliation` - author affiliation\n+ `archive` - archive location\n+ `assertion` - custom Crossmark assertion name\n+ `assertion-group` - custom Crossmark assertion group name\n+ `category-name` - category name of work\n+ `container-title` - [max value 100], work container title, such as journal title, or book title\n+ `funder-doi` - funder DOI\n+ `funder-name` - funder literal name as deposited alongside DOI\n+ `issn` - [max value 100], journal ISSN (any - print, electronic, link)\n+ `journal-issue` - journal issue number\n+ `journal-volume` - journal volume\n+ `license` - license URI of work\n+ `link-application` - intended application of the full text link\n+ `orcid` - [max value 100], contributor ORCID\n+ `published` - earliest year of publication\n+ `publisher-name` - publisher name of work\n+ `relation-type` - relation type described by work or described by another work with work as object\n+ `ror-id` - institution ROR ID\n+ `source` - source of the DOI\n+ `type-name` - work type name, such as\u00a0journal-article\u00a0or\u00a0book-chapter\n+ `update-type` - significant update type\n## Filters\n\nFilters allow you to select items based on specific criteria. All filter results are lists.\n\n##\n\nFor example:\n\n##\n```\n\/works?filter=type:dataset\n```\n\n### Multiple filters\n\nMultiple filters can be specified in a single query. In such a case, different filters will be applied with AND semantics, while specifying the same filter multiple times will result in OR semantics - that is, specifying the filters:\n\n- `is-update:true`\n- `from-pub-date:2014-03-03`\n- `funder:10.13039\/100000001`\n- `funder:10.13039\/100000050`\n\nwould locate documents that are updates, were published on or after 3rd March 2014 and were funded by either the National Science Foundation (`10.13039\/100000001`) or the National Heart, Lung, and Blood Institute (`10.13039\/100000050`). These filters would be specified by joining each filter together with a comma:\n\n##\n```\n\/works?filter=is-update:true,from-pub-date:2014-03-03,funder:10.13039\/100000001,funder:10.13039\/100000050\n```\n\n### Dot filters\n\nA filter with a dot in its name is special. The dot signifies that the filter will be applied to some other record type that is related to primary resource record type. For example, with work queries, one can filter on works that have an award, where the same award has a particular award number and award-giving funding agency:\n\n##\n```\n\/works?filter=award.number:CBET-0756451,award.funder:10.13039\/100000001\n```\n##\n\nHere we filter on works that have an award by the National Science Foundation that also has the award number `CBET-0756451`.\n\n### Note on dates\n\nThe dates in filters should always be of the form YYYY-MM-DD, YYYY-MM or YYYY. The date filters are inclusive. For example:\n\n* `from-pub-date:2018-09-18` filters works published on or after 18th September 2018\n* `from-created-date:2016-02-29,until-created-date:2016-02-29` filters works first deposited on 29th February 2016\n* `until-created-date:2010-06` filters works first deposited in or before June 2010\n* `from-update-date:2017,until-update-date:2017` filters works with metadata updated in 2017\n\nAlso note that date information in Crossref metadata can often be incomplete. So, for example, a publisher may only include the year and month of publication for a journal article. For a monograph they might just include the year. In these cases the API selects the earliest possible date given the information provided. So, for instance, if the publisher only provided 2013-02 as the published date, then the date would be treated as 2013-02-01. Similarly, if the publisher only provided the year 2013 as the date, it would be treated at 2013-01-01.\n\n### Note on owner prefixes\n\nThe prefix of a Crossref DOI does **NOT** indicate who currently owns the DOI. It only reflects who originally registered the DOI. Crossref metadata has an **prefix** element that records the current owner of the Crossref DOI in question.\n\n##\n\nCrossref also has member IDs for depositing organisations. A single member may control multiple owner prefixes, which in turn may control a number of DOIs. When looking at works published by a certain organisaton, member IDs and the member routes should be used.\n\n### Notes on incremental metadata updates\n\nWhen using time filters to retrieve periodic, incremental metadata updates, the `from-index-date` filter should be used over `from-update-date`, `from-deposit-date`, `from-created-date` and `from-pub-date`. The timestamp that `from-index-date` filters on is guaranteed to be updated every time there is a change to metadata requiring a reindex.\n\n##\n\nThis endpoint supports the following filters:\n\n##\n\n+ `alternative-id` - metadata for records with the given alternative ID, which may be a publisher-specific ID, or any other identifier a publisher may have provided\n+ `archive` - metadata where value of archive partner equals given archive name\n+ `article-number` - metadata for records with a given article number\n+ `assertion` - metadata for records with a given named assertion\n+ `assertion-group` - metadata for records with an assertion in a given group\n+ `award`\n  + `award.funder` - metadata for records with award funder equal to given funder, optionally combine with\u00a0`award.number`\n  + `award.number` - metadata for records with award number equal to given number, optionally combine with\u00a0`award.funder`\n+ `category-name` - metadata for records with category label equal to given name, category labels come from\u00a0the list\u00a0published by Scopus\n+ `citation-id`\n+ `clinical-trial-number` - metadata for records with given clinical trial number\n+ `container-title` - metadata with a publication title that exactly equals given title\n+ `content-domain` - metadata where the publisher records a given domain name as the location Crossmark content will appear\n+ `doi` - metadata describing given DOI\n+ `from-accepted-date` - [date], metadata where accepted date is since given date (inclusive)\n+ `from-approved-date` - [date], metadata where approved date is since given date (inclusive)\n+ `from-awarded-date` - [date], metadata where award date is since given date (inclusive)\n+ `from-created-date` - [date], metadata first deposited since given date (inclusive)\n+ `from-deposit-date` - [date], metadata last (re)deposited since given date (inclusive)\n+ `from-event-end-date` - [date], metadata where event end date is since given date (inclusive)\n+ `from-event-start-date` - [date], metadata where event start date is since given date  (inclusive)\n+ `from-index-date` - [date], metadata indexed since given date (inclusive)\n+ `from-issued-date` - [date], metadata where issued date is since given date  (inclusive)\n+ `from-online-pub-date` - [date], metadata where online published date is since given date (inclusive)\n+ `from-posted-date` - [date], metadata where posted date is since given date (inclusive)\n+ `from-print-pub-date` - [date], metadata where print published date is since given date (inclusive)\n+ `from-pub-date` - [date], metadata where published date is since given date (inclusive)\n+ `from-update-date` - [date], metadata updated since given date (inclusive), currently the same as\u00a0`from-deposit-date`\n+ `full-text`\n  + `full-text.type` - metadata where\u00a0`resource`\u00a0element's\u00a0`content_type`\u00a0attribute equals given version\u00a0mime type\u00a0(e.g.\u00a0application\/pdf)\n  + `full-text.application` - [text-mining,\u00a0similarity-checking\u00a0or\u00a0unspecified], metadata where\u00a0`resource` link has given application\n  + `full-text.version` - metadata where\u00a0`resource`\u00a0element's\u00a0`content_version`\u00a0attribute equals given version\n+ `funder` - metadata which include given funder id\u00a0in FundRef data\n+ `funder-doi-asserted-by` - metadata where funder DOI was asserted by given body\n+ `group-title` - metadata with given group title\n+ `gte-award-amount` - metadata where award is greater than or equals given number\n+ `has-abstract` - [0 or 1], metadata for records with\/without an abstract\n+ `has-affiliation` - [0 or 1], metadata for records with\/without affiliation information\n+ `has-alias`\n+ `has-archive` - [0 or 1], metadata which includes\/does not include name of archive partner\n+ `has-assertion` - [0 or 1], metadata for records with\/without assertions\n+ `has-authenticated-orcid` - [0 or 1], metadata which includes\/does not include one or more ORCIDs where the depositing publisher claims to have witness the ORCID owner authenticate with ORCID\n+ `has-award` - [0 or 1], metadata for records with\/without award\n+ `has-clinical-trial-number` - [0 or 1], metadata for records with\/without a clinical trial number\n+ `has-content-domain` - [0 or 1], metadata where the publisher records\/does not record a domain name location for Crossmark content\n+ `has-description`\n+ `has-domain-restriction` - [0 or 1], metadata where the publisher restricts\/does not restrict Crossmark usage to content domains\n+ `has-event` - [0 or 1], metadata for records with\/without event\n+ `has-full-text` - [0 or 1], metadata that includes\/does not include any full text\u00a0`resource`\u00a0elements\n+ `has-funder` - [0 or 1], metadata which includes\/does not include one or more funder entry\n+ `has-funder-doi` - [0 or 1], metadata for records with\/without funder DOI\n+ `has-license` - [0 or 1], metadata that includes\/does not include any\u00a0`license_ref`\u00a0elements\n+ `has-orcid` - [0 or 1], metadata which includes\/does not include one or more ORCIDs\n+ `has-prime-doi`\n+ `has-references` - [0 or 1], metadata for works that have\/don't have a list of references\n+ `has-relation` - [0 or 1], metadata for records that either assert\/do not assert or are\/are not the object of a relation\n+ `has-ror-id` - [0 or 1], metadata for records with\/without ROR ID\n+ `has-update` - [0 or 1], metadata for records with\/without update information\n+ `has-update-policy` - [0 or 1], metadata for records that include\/do not include a link to an editorial update policy\n+ `is-update` - [0 or 1], metadata for records that represent\/do not represent editorial updates\n+ `isbn` - metadata with given ISBN\n+ `issn` - metadata with given ISSN, format is\u00a0xxxx-xxxx\n+ `license`\n  + `license.url` - metadata where\u00a0`license_ref`\u00a0value equals\u00a0given url\n  + `license.version` - metadata where the\u00a0`license_ref`'s\u00a0`applies_to`\u00a0attribute equals given version\n  + `license.delay` - metadata where difference between publication date and the\u00a0`license_ref`'s\u00a0`start_date`\u00a0attribute is <=\u00a0than given delay\u00a0(in days)\n+ `lte-award-amount` - metadata where award is less than or equals given number\n+ `member` - metadata belonging to a given Crossref member\n+ `orcid` - metadata where\u00a0there is a contributor with given ORCID\n+ `prefix` - metadata belonging to a given DOI owner prefix\u00a0(e.g.\u00a010.1016)\n+ `relation`\n  + `relation.type` - metadata for records with a relation with the given type from the Crossref relations schema (e.g.\u00a0is-referenced-by,\u00a0is-parent-of,\u00a0is-preprint-of)\n  + `relation.object-type` - metadata for records with a relation, where the object type matches given type from the Crossref relations schema (e.g.\u00a0doi,\u00a0issn)\n  + `relation.object` - metadata for records with a relation, where the object identifier matches given identifier\n+ `ror-id` - metadata with given ROR ID\n+ `type` - metadata records whose type equals given type, type must be an ID value from the list of types returned by the\u00a0\/types\u00a0resource\n+ `type-name` - metadata for records with type name equal to given name\n+ `until-accepted-date` - [date], metadata where accepted date is before given date (inclusive)\n+ `until-approved-date` - [date], metadata where approved date is before given date (inclusive)\n+ `until-awarded-date` - [date], metadata where award date is before given date (inclusive)\n+ `until-created-date` - [date], metadata first deposited before given date (inclusive)\n+ `until-deposit-date` - [date], metadata last (re)deposited before given date (inclusive)\n+ `until-event-end-date` - [date], metadata where event end date is before given date (inclusive)\n+ `until-event-start-date` - [date], metadata where event start date is before given date  (inclusive)\n+ `until-index-date` - [date], metadata indexed before given date (inclusive)\n+ `until-issued-date` - [date], metadata where issued date is before given date  (inclusive)\n+ `until-online-pub-date` - [date], metadata where online published date is before given date (inclusive)\n+ `until-posted-date` - [date], metadata where posted date is before given date (inclusive)\n+ `until-print-pub-date` - [date], metadata where print published date is before given date (inclusive)\n+ `until-pub-date` - [date], metadata where published date is before given date (inclusive)\n+ `until-update-date` - [date], metadata updated before given date (inclusive), currently the same as\u00a0`until-deposit-date`\n+ `update-type` - metadata with given update type\n+ `updates` - metadata for records that represent editorial updates to given DOI\n## Elements\n\nCrossref metadata records can be quite large. Sometimes you just want a few elements from the schema. You can \\\"select\\\" a subset of elements to return using the `select` parameter. This can make your API calls much more efficient. For example:\n\n##\n```\n\/works?select=DOI,prefix,title\n```\n\n##\n\nThis endpoint supports selecting the following elements.\n\n##\n\n+ `DOI`\n+ `ISBN`\n+ `ISSN`\n+ `URL`\n+ `abstract`\n+ `accepted`\n+ `alternative-id`\n+ `approved`\n+ `archive`\n+ `article-number`\n+ `assertion`\n+ `author`\n+ `chair`\n+ `clinical-trial-number`\n+ `container-title`\n+ `content-created`\n+ `content-domain`\n+ `created`\n+ `degree`\n+ `deposited`\n+ `editor`\n+ `event`\n+ `funder`\n+ `group-title`\n+ `indexed`\n+ `is-referenced-by-count`\n+ `issn-type`\n+ `issue`\n+ `issued`\n+ `license`\n+ `link`\n+ `member`\n+ `original-title`\n+ `page`\n+ `posted`\n+ `prefix`\n+ `published`\n+ `published-online`\n+ `published-print`\n+ `publisher`\n+ `publisher-location`\n+ `reference`\n+ `references-count`\n+ `relation`\n+ `resource`\n+ `score`\n+ `short-container-title`\n+ `short-title`\n+ `standards-body`\n+ `subject`\n+ `subtitle`\n+ `title`\n+ `translator`\n+ `type`\n+ `update-policy`\n+ `update-to`\n+ `updated-by`\n+ `volume`\n## Pagination with offsets\n\nOffsets are an easy way to iterate over results sets up to 10,000 items. This limit applies to the sum of values of parameters `offset` + `rows`.\n\n##\n\nThe number of items returned in a single response is controlled by `rows` parameter (default is 20, and maximum is 1,000). To limit results to 5, for example, you could do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5\n```\n\n##\n\n`offset` parameter can be used to retrieve items starting from a specific index of the result list. For example, to select the second set of 5 results (i.e. results 6 through 10), you would do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5&offset=5\n```\n\n##\n\n## Deep paging\n\nDeep paging using cursors can be used to iterate over large result sets, without any limits on their size.\n\n##\n\nTo use deep paging make a query as normal, but include the `cursor` parameter with a value of `*`, for example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=*\n```\n\n##\n\nA `next-cursor` field will be provided in the JSON response. To get the next page of results, pass the value of `next-cursor` as the cursor parameter (remember to URL-encode). For example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=<value of next-cursor parameter>\n```\n\n##\n\nClients should check the number of returned items. If the number of returned items is equal to the number of expected rows then the end of the result set has been reached. Using next-cursor beyond this point will result in responses with an empty items list. Cursors expire after 5 minutes if they are not used.\n\n##\n\n## Sample\n\nBeing able to select random results is useful for both testing and sampling. You can use the `sample` parameter to retrieve random results. So, for example, the following selects 10 random works:\n\n##\n```\n\/works?sample=10\n```\n##\n\nNote that when you use the `sample` parameter, the `rows` and `offset` parameters are ignored.\n\n\n## Parameter combinations\n\nAny combination of `query`, `query.*`, `filter`, `facet`, `select` and `sort` can be used with offsets. Sampling cannot be combined with offsets.\n\n##\n\nAny combination of `query`, `query.*`, `filter`, `facet`, `select` and `sort` may also be used with deep paging cursors. `rows` may also be specified.\n\n##\n\n`offset` and `sample` cannot be used in combination with cursors.\n\n##\n","parameters":[{"in":"query","name":"rows","description":"The number of rows per page","required":false,"type":"integer","format":"int64"},{"in":"query","name":"order","description":"Combined with sort can be used to specify the order of results, e.g. asc or desc","required":false,"pattern":"(asc|desc)","type":"string"},{"in":"query","name":"facet","description":"Exposes the ability to retrieve counts for pre-defined facets e.g. `type-name:*` returns counts of all works by type","required":false,"type":"string"},{"in":"query","name":"sample","description":"Exposes the ability to return `N` randomly sampled items","required":false,"type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Exposes the ability to sort results by a certain field, e.g. `score`","required":false,"type":"string"},{"in":"query","name":"offset","description":"The number of rows to skip before returning","required":false,"type":"integer","format":"int64"},{"in":"query","name":"mailto","description":"The email address to identify yourself and be in the \"polite pool\"","required":false,"pattern":"^[A-Za-z0-9._%+-]+@[A-Za-z0-9-]+\\.[A-Za-z]{2,6}$","type":"string"},{"in":"query","name":"select","description":"Exposes the ability to select certain fields, supports a comma separated list of fields, e.g. `DOI,volume`","required":false,"pattern":"^\\w+(,\\w+)*$","type":"string"},{"in":"query","name":"query","description":"Exposes the ability to free text query certain fields","required":false,"type":"string"},{"in":"query","name":"filter","description":"Exposes the ability to filter by certain fields, supports a comma separated list of lucene filters, e.g. `content-domain:psychoceramics.labs.crossref.org`","required":false,"type":"string"},{"in":"query","name":"cursor","description":"Exposes the ability to deep page through large result sets, where offset would cause performance problems","required":false,"type":"string"},{"in":"path","name":"issn","description":"The ISSN identifier associated with the journal","required":true,"type":"array","items":{"type":"string"}}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/WorksMessage"},"description":"A list of works"}},"tags":["Journals"]}},"\/funders\/{id}":{"get":{"description":"Returns metadata for specified funder **and** its suborganizations, as an example use id 501100006004","parameters":[{"in":"path","name":"id","description":"The id of the funder","required":true,"type":"string"}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/FunderMessage"},"description":"The funder identified by {id}."},"404":{"description":"The funder identified by {id} does not exist."}},"tags":["Funders"]}},"\/funders":{"get":{"description":"Returns a list of all funders in the [Funder Registry](https:\/\/gitlab.com\/crossref\/open_funder_registry).\n## Queries\n\nFree form search queries can be made, for example, funders that include `research` and `foundation`:\n\n##\n\n```\n\/funders?query=research+foundation\n```\n\n\n## Filters\n\nFilters allow you to select items based on specific criteria. All filter results are lists.\n\n##\n\nExample:\n\n##\n```\n\/funders?filter=location:Spain\n```\n##\n\nThis endpoint supports the following filters:\n\n##\n\n+ `location` - funders located in given country\n## Pagination with offsets\n\nOffsets can be used to iterate over the results. For this route, the maximum number of available results is 80,000, which in this case allows to retrieve all the indexed items. This limit applies to the sum of values of parameters `offset` + `rows`.\n\n##\n\nThe number of items returned in a single response is controlled by `rows` parameter (default is 20, and maximum is 1,000). To limit results to 5, for example, you could do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5\n```\n\n##\n\n`offset` parameter can be used to retrieve items starting from a specific index of the result list. For example, to select the second set of 5 results (i.e. results 6 through 10), you would do the following:\n\n##\n\n```\n\/works?query=allen+renear&rows=5&offset=5\n```\n\n##\n\n## Deep paging\n\nDeep paging using cursors can be used to iterate over large result sets, without any limits on their size.\n\n##\n\nTo use deep paging make a query as normal, but include the `cursor` parameter with a value of `*`, for example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=*\n```\n\n##\n\nA `next-cursor` field will be provided in the JSON response. To get the next page of results, pass the value of `next-cursor` as the cursor parameter (remember to URL-encode). For example:\n\n##\n\n```\n\/members\/311\/works?filter=type:journal-article&cursor=<value of next-cursor parameter>\n```\n\n##\n\nClients should check the number of returned items. If the number of returned items is equal to the number of expected rows then the end of the result set has been reached. Using next-cursor beyond this point will result in responses with an empty items list. Cursors expire after 5 minutes if they are not used.\n\n##\n","parameters":[{"in":"query","name":"filter","description":"Exposes the ability to search funders by location using a Lucene based syntax","required":false,"pattern":"location:.*","type":"string"},{"in":"query","name":"cursor","description":"Exposes the ability to deep page through large result sets, where offset would cause performance problems","required":false,"type":"string"},{"in":"query","name":"query","description":"Exposes the ability to free text query certain fields","required":false,"type":"string"},{"in":"query","name":"rows","description":"The number of rows per page","required":false,"type":"integer","format":"int64"},{"in":"query","name":"mailto","description":"The email address to identify yourself and be in the \"polite pool\"","required":false,"pattern":"^[A-Za-z0-9._%+-]+@[A-Za-z0-9-]+\\.[A-Za-z]{2,6}$","type":"string"},{"in":"query","name":"offset","description":"The number of rows to skip before returning","required":false,"type":"integer","format":"int64"}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/FundersMessage"},"description":"A list of funders."}},"tags":["Funders"]}},"\/prefixes\/{prefix}":{"get":{"description":"Returns metadata for the DOI owner prefix, as an example use prefix 10.1016","parameters":[{"in":"path","name":"prefix","description":"","required":true,"type":"string"}],"responses":{"200":{"schema":{"$ref":"#\/definitions\/PrefixMessage"},"description":"The prefix data identified by {prefix}."},"404":{"description":"The prefix data identified by {prefix} does not exist."}},"tags":["Prefixes"]}}},"definitions":{"Affiliation":{"type":"object","properties":{"name":{"type":"string"}},"additionalProperties":false,"required":["name"]},"AffiliationIdentifier":{"type":"object","properties":{"id":{"type":"string"},"id-type":{"type":"string"},"asserted-by":{"type":"string"}},"additionalProperties":false,"required":["id","id-type","asserted-by"]},"Agency":{"type":"object","properties":{"id":{"type":"string"},"label":{"type":"string"}},"additionalProperties":false,"required":["id","label"]},"AgencyMessage":{"type":"object","properties":{"status":{"type":"string"},"message-type":{"type":"string","pattern":"work-agency"},"message-version":{"type":"string"},"message":{"$ref":"#\/definitions\/DoiAgency"}},"additionalProperties":false,"required":["status","message-type","message-version","message"]},"Author":{"type":"object","properties":{"ORCID":{"type":"string"},"suffix":{"type":"string"},"given":{"type":"string"},"family":{"type":"string"},"affiliation":{"type":"array","items":{"$ref":"#\/definitions\/Affiliation"}},"name":{"type":"string"},"authenticated-orcid":{"type":"boolean"},"prefix":{"type":"string"},"sequence":{"type":"string"}},"additionalProperties":false,"required":["affiliation","sequence"]},"AwardAmount":{"type":"object","properties":{"amount":{"type":"number","format":"double"},"currency":{"type":"string"},"percentage":{"type":"integer","format":"int64"}},"additionalProperties":false,"required":["amount"]},"BreakdownsObject":{"type":"object","properties":{"dois-by-issued-year":{"type":"array","items":{"type":"array","items":{"type":"integer","format":"int64"}}}},"additionalProperties":false,"required":["dois-by-issued-year"]},"Coverage":{"type":"object","properties":{"last-status-check-time":{"type":"integer","format":"int64"},"affiliations":{"type":"number","format":"double"},"abstracts":{"type":"number","format":"double"},"orcids":{"type":"number","format":"double"},"licenses":{"type":"number","format":"double"},"references":{"type":"number","format":"double"},"funders":{"type":"number","format":"double"},"similarity-checking":{"type":"number","format":"double"},"award-numbers":{"type":"number","format":"double"},"ror-ids":{"type":"number","format":"double"},"update-policies":{"type":"number","format":"double"},"resource-links":{"type":"number","format":"double"},"descriptions":{"type":"number","format":"double"}},"additionalProperties":false,"required":["last-status-check-time","affiliations","abstracts","orcids","licenses","references","funders","similarity-checking","award-numbers","ror-ids","update-policies","resource-links","descriptions"]},"CoverageFull":{"type":"object","properties":{"affiliations-current":{"type":"number","format":"double"},"similarity-checking-current":{"type":"number","format":"double"},"descriptions-current":{"type":"number","format":"double"},"ror-ids-current":{"type":"number","format":"double"},"references-backfie":{"type":"number","format":"double"},"funders-backfile":{"type":"number","format":"double"},"licenses-backfile":{"type":"number","format":"double"},"funders-current":{"type":"number","format":"double"},"affiliations-backfile":{"type":"number","format":"double"},"resource-links-backfile":{"type":"number","format":"double"},"orcids-backfile":{"type":"number","format":"double"},"update-policies-current":{"type":"number","format":"double"},"ror-ids-backfile":{"type":"number","format":"double"},"orcids-current":{"type":"number","format":"double"},"similarity-checking-backfile":{"type":"number","format":"double"},"descriptions-backfile":{"type":"number","format":"double"},"award-numbers-backfile":{"type":"number","format":"double"},"update-policies-backfile":{"type":"number","format":"double"},"licenses-current":{"type":"number","format":"double"},"award-numbers-current":{"type":"number","format":"double"},"abstracts-backfile":{"type":"number","format":"double"},"resource-links-current":{"type":"number","format":"double"},"abstracts-current":{"type":"number","format":"double"},"references-current":{"type":"number","format":"double"}},"additionalProperties":false,"required":["affiliations-current","similarity-checking-current","descriptions-current","ror-ids-current","references-backfie","funders-backfile","licenses-backfile","funders-current","affiliations-backfile","resource-links-backfile","orcids-backfile","update-policies-current","ror-ids-backfile","orcids-current","similarity-checking-backfile","descriptions-backfile","award-numbers-backfile","update-policies-backfile","licenses-current","award-numbers-current","abstracts-backfile","resource-links-current","abstracts-current","references-current"]},"CoverageObject":{"type":"object","additionalProperties":{"$ref":"#\/definitions\/Coverage"}},"CoverageTypeObject":{"type":"object","properties":{"all":{"$ref":"#\/definitions\/CoverageObject"},"current":{"$ref":"#\/definitions\/CoverageObject"},"backfile":{"$ref":"#\/definitions\/CoverageObject"}},"additionalProperties":false,"required":["all","current","backfile"]},"Date":{"type":"object","properties":{"date-parts":{"type":"array","items":{"type":"array","items":{"type":"integer","format":"int64"}}},"date-time":{"type":"string","format":"date-time"},"timestamp":{"type":"integer","format":"int64"}},"additionalProperties":false,"required":["date-parts","date-time","timestamp"]},"DateAndVersion":{"type":"object","properties":{"date-parts":{"type":"array","items":{"type":"array","items":{"type":"integer","format":"int64"}}},"date-time":{"type":"string","format":"date-time"},"timestamp":{"type":"integer","format":"int64"},"version":{"type":"string"}},"additionalProperties":false,"required":["date-parts","date-time","timestamp","version"]},"DateParts":{"type":"object","properties":{"date-parts":{"type":"array","items":{"type":"array","items":{"type":"integer","format":"int64"}}}},"additionalProperties":false,"required":["date-parts"]},"DoiAgency":{"type":"object","properties":{"DOI":{"description":"The DOI identifier associated with the work","type":"string"},"agency":{"$ref":"#\/definitions\/Agency"}},"additionalProperties":false,"required":["DOI","agency"]},"DoiCounts":{"type":"object","properties":{"total-dois":{"type":"integer","format":"int64"},"current-dois":{"type":"integer","format":"int64"},"backfile-dois":{"type":"integer","format":"int64"}},"additionalProperties":false,"required":["total-dois","current-dois","backfile-dois"]},"Flags":{"type":"object","properties":{"deposits-abstracts-current":{"type":"boolean"},"deposits-orcids-current":{"type":"boolean"},"deposits":{"type":"boolean"},"deposits-affiliations-backfile":{"type":"boolean"},"deposits-update-policies-backfile":{"type":"boolean"},"deposits-award-numbers-current":{"type":"boolean"},"deposits-resource-links-current":{"type":"boolean"},"deposits-ror-ids-current":{"type":"boolean"},"deposits-articles":{"type":"boolean"},"deposits-affiliations-current":{"type":"boolean"},"deposits-funders-current":{"type":"boolean"},"deposits-references-backfile":{"type":"boolean"},"deposits-ror-ids-backfile":{"type":"boolean"},"deposits-abstracts-backfile":{"type":"boolean"},"deposits-licenses-backfile":{"type":"boolean"},"deposits-award-numbers-backfile":{"type":"boolean"},"deposits-descriptions-current":{"type":"boolean"},"deposits-references-current":{"type":"boolean"},"deposits-resource-links-backfile":{"type":"boolean"},"deposits-descriptions-backfile":{"type":"boolean"},"deposits-orcids-backfile":{"type":"boolean"},"deposits-funders-backfile":{"type":"boolean"},"deposits-update-policies-current":{"type":"boolean"},"deposits-licenses-current":{"type":"boolean"}},"additionalProperties":false,"required":["deposits-abstracts-current","deposits-orcids-current","deposits","deposits-affiliations-backfile","deposits-update-policies-backfile","deposits-award-numbers-current","deposits-resource-links-current","deposits-ror-ids-current","deposits-articles","deposits-affiliations-current","deposits-funders-current","deposits-references-backfile","deposits-ror-ids-backfile","deposits-abstracts-backfile","deposits-licenses-backfile","deposits-award-numbers-backfile","deposits-descriptions-current","deposits-references-current","deposits-resource-links-backfile","deposits-descriptions-backfile","deposits-orcids-backfile","deposits-funders-backfile","deposits-update-policies-current","deposits-licenses-current"]},"Funder":{"type":"object","properties":{"id":{"description":"The id of the funder","type":"string"},"location":{"description":"The geographic location of the funder","type":"string"},"name":{"type":"string"},"alt-names":{"description":"Other names this funder may be identified with","type":"array","items":{"type":"string"}},"uri":{"type":"string"},"replaces":{"type":"array","items":{"type":"string"}},"replaced-by":{"type":"array","items":{"type":"string"}},"tokens":{"type":"array","items":{"type":"string"}}},"additionalProperties":false,"required":["id","location","name","alt-names","uri","replaces","replaced-by","tokens"]},"FunderFull":{"type":"object","properties":{"hierarchy-names":{"$ref":"#\/definitions\/HierarchyNamesObject"},"replaced-by":{"type":"array","items":{"type":"string"}},"work-count":{"type":"integer","format":"int64"},"name":{"type":"string"},"descendants":{"type":"array","items":{"type":"string"}},"descendant-work-count":{"type":"integer","format":"int64"},"id":{"description":"The id of the funder","type":"string"},"tokens":{"type":"array","items":{"type":"string"}},"replaces":{"type":"array","items":{"type":"string"}},"uri":{"type":"string"},"hierarchy":{"$ref":"#\/definitions\/FunderHierarchy"},"alt-names":{"description":"Other names this funder may be identified with","type":"array","items":{"type":"string"}},"location":{"description":"The geographic location of the funder","type":"string"}},"additionalProperties":false,"required":["hierarchy-names","replaced-by","work-count","name","descendants","descendant-work-count","id","tokens","replaces","uri","hierarchy","alt-names","location"]},"FunderHierarchy":{"type":"object","properties":{"more":{"type":"boolean"}},"additionalProperties":{}},"FunderIdentifier":{"type":"object","properties":{"id":{"type":"string"},"id-type":{"type":"string"},"asserted-by":{"type":"string"}},"additionalProperties":false,"required":["id","id-type","asserted-by"]},"FunderMessage":{"type":"object","properties":{"status":{"type":"string"},"message-type":{"type":"string","pattern":"funder"},"message-version":{"type":"string"},"message":{"$ref":"#\/definitions\/FunderFull"}},"additionalProperties":false,"required":["status","message-type","message-version","message"]},"Funders":{"type":"object","properties":{"items-per-page":{"type":"integer","format":"int64"},"query":{"$ref":"#\/definitions\/Query"},"total-results":{"type":"integer","format":"int64"},"items":{"type":"array","items":{"$ref":"#\/definitions\/Funder"}}},"additionalProperties":false,"required":["items-per-page","query","total-results","items"]},"FundersMessage":{"type":"object","properties":{"status":{"type":"string"},"message-type":{"type":"string","pattern":"funder-list"},"message-version":{"type":"string"},"message":{"$ref":"#\/definitions\/Funders"}},"additionalProperties":false,"required":["status","message-type","message-version","message"]},"Funding":{"type":"object","properties":{"type":{"type":"string"},"scheme":{"type":"string"},"award-amount":{"$ref":"#\/definitions\/AwardAmount"},"funder":{"type":"array","items":{"$ref":"#\/definitions\/WorkFunder"}}},"additionalProperties":false,"required":["type","funder"]},"HierarchyNamesObject":{"type":"object","additionalProperties":{"type":"string"}},"Investigator":{"type":"object","properties":{"ORCID":{"type":"string"},"suffix":{"type":"string"},"given":{"type":"string"},"family":{"type":"string"},"affiliation":{"type":"array","items":{"$ref":"#\/definitions\/InvestigatorAffiliation"}},"name":{"type":"string"},"role-start":{"$ref":"#\/definitions\/DateParts"},"authenticated-orcid":{"type":"boolean"},"prefix":{"type":"string"},"alternate-name":{"type":"string"},"sequence":{"type":"string"},"role-end":{"$ref":"#\/definitions\/DateParts"}},"additionalProperties":false,"required":["affiliation"]},"InvestigatorAffiliation":{"type":"object","properties":{"id":{"type":"array","items":{"$ref":"#\/definitions\/AffiliationIdentifier"}},"name":{"type":"string"}},"additionalProperties":false,"required":["id","name"]},"Journal":{"type":"object","properties":{"last-status-check-time":{"type":"integer","format":"int64"},"counts":{"$ref":"#\/definitions\/DoiCounts"},"breakdowns":{"$ref":"#\/definitions\/BreakdownsObject"},"publisher":{"description":"The publisher of the journal","type":"string"},"coverage":{"$ref":"#\/definitions\/CoverageFull"},"title":{"description":"The title of the journal","type":"string"},"subjects":{"type":"array","items":{"type":"string"}},"coverage-type":{"$ref":"#\/definitions\/CoverageTypeObject"},"flags":{"$ref":"#\/definitions\/Flags"},"ISSN":{"description":"The ISSN identifier associated with the journal","type":"array","items":{"type":"string"}},"issn-type":{"$ref":"#\/definitions\/JournalIssnType"}},"additionalProperties":false,"required":["last-status-check-time","counts","breakdowns","publisher","coverage","title","subjects","coverage-type","flags","ISSN","issn-type"]},"JournalIssnType":{"type":"object","properties":{"value":{"type":"string"},"type":{"type":"string"}},"additionalProperties":false,"required":["value","type"]},"JournalMessage":{"type":"object","properties":{"status":{"type":"string"},"message-type":{"type":"string","pattern":"journal"},"message-version":{"type":"string"},"message":{"$ref":"#\/definitions\/Journal"}},"additionalProperties":false,"required":["status","message-type","message-version","message"]},"Journals":{"type":"object","properties":{"items-per-page":{"type":"integer","format":"int64"},"query":{"$ref":"#\/definitions\/Query"},"total-results":{"type":"integer","format":"int64"},"items":{"type":"array","items":{"$ref":"#\/definitions\/Journal"}}},"additionalProperties":false,"required":["items-per-page","query","total-results","items"]},"JournalsMessage":{"type":"object","properties":{"status":{"type":"string"},"message-type":{"type":"string","pattern":"journal-list"},"message-version":{"type":"string"},"message":{"$ref":"#\/definitions\/Journals"}},"additionalProperties":false,"required":["status","message-type","message-version","message"]},"License":{"type":"object","properties":{"URL":{"type":"string"},"work-count":{"type":"integer","format":"int64"}},"additionalProperties":false,"required":["URL","work-count"]},"Licenses":{"type":"object","properties":{"total-results":{"type":"integer","format":"int64"},"items":{"type":"array","items":{"$ref":"#\/definitions\/License"}}},"additionalProperties":false,"required":["total-results","items"]},"LicensesMessage":{"type":"object","properties":{"status":{"type":"string"},"message-type":{"type":"string","pattern":"license-list"},"message-version":{"type":"string"},"message":{"$ref":"#\/definitions\/Licenses"}},"additionalProperties":false,"required":["status","message-type","message-version","message"]},"Member":{"type":"object","properties":{"last-status-check-time":{"type":"integer","format":"int64"},"primary-name":{"type":"string"},"counts":{"$ref":"#\/definitions\/DoiCounts"},"breakdowns":{"$ref":"#\/definitions\/BreakdownsObject"},"prefixes":{"type":"array","items":{"type":"string"}},"coverage":{"$ref":"#\/definitions\/CoverageFull"},"prefix":{"type":"array","items":{"$ref":"#\/definitions\/MemberPrefix"}},"id":{"type":"integer","format":"int64"},"tokens":{"type":"array","items":{"type":"string"}},"counts-type":{"$ref":"#\/definitions\/MemberCountsType"},"coverage-type":{"$ref":"#\/definitions\/CoverageTypeObject"},"flags":{"$ref":"#\/definitions\/Flags"},"location":{"type":"string"},"names":{"type":"array","items":{"type":"string"}}},"additionalProperties":false,"required":["last-status-check-time","primary-name","counts","breakdowns","prefixes","coverage","prefix","id","tokens","counts-type","coverage-type","flags","location","names"]},"MemberCountObject":{"type":"object","additionalProperties":{"type":"integer","format":"int64"}},"MemberCountsType":{"type":"object","properties":{"all":{"$ref":"#\/definitions\/MemberCountObject"},"current":{"$ref":"#\/definitions\/MemberCountObject"},"backfile":{"$ref":"#\/definitions\/MemberCountObject"}},"additionalProperties":false,"required":["all","current","backfile"]},"MemberMessage":{"type":"object","properties":{"status":{"type":"string"},"message-type":{"type":"string","pattern":"member"},"message-version":{"type":"string"},"message":{"$ref":"#\/definitions\/Member"}},"additionalProperties":false,"required":["status","message-type","message-version","message"]},"MemberPrefix":{"type":"object","properties":{"name":{"type":"string"},"value":{"type":"string"}},"additionalProperties":false,"required":["name","value"]},"Members":{"type":"object","properties":{"items-per-page":{"type":"integer","format":"int64"},"query":{"$ref":"#\/definitions\/Query"},"total-results":{"type":"integer","format":"int64"},"items":{"type":"array","items":{"$ref":"#\/definitions\/Member"}}},"additionalProperties":false,"required":["items-per-page","query","total-results","items"]},"MembersMessage":{"type":"object","properties":{"status":{"type":"string"},"message-type":{"type":"string","pattern":"member-list"},"message-version":{"type":"string"},"message":{"$ref":"#\/definitions\/Members"}},"additionalProperties":false,"required":["status","message-type","message-version","message"]},"PostedContentStatus":{"type":"object","properties":{"type":{"type":"string"},"update":{"$ref":"#\/definitions\/DateParts"},"status-description":{"type":"array","items":{"$ref":"#\/definitions\/StatusDescription"}}},"additionalProperties":false,"required":["type","update","status-description"]},"Prefix":{"type":"object","properties":{"member":{"type":"string"},"name":{"type":"string"},"prefix":{"type":"string"}},"additionalProperties":false,"required":["member","name","prefix"]},"PrefixMessage":{"type":"object","properties":{"status":{"type":"string"},"message-type":{"type":"string","pattern":"prefix"},"message-version":{"type":"string"},"message":{"$ref":"#\/definitions\/Prefix"}},"additionalProperties":false,"required":["status","message-type","message-version","message"]},"PrimaryResource":{"type":"object","properties":{"URL":{"type":"string"}},"additionalProperties":false,"required":["URL"]},"ProjectTitle":{"type":"object","properties":{"title":{"type":"string"},"language":{"type":"string"}},"additionalProperties":false,"required":["title"]},"Query":{"type":"object","properties":{"start-index":{"type":"integer","format":"int64"},"search-terms":{"type":"string"}},"additionalProperties":false,"required":["start-index","search-terms"]},"Reference":{"type":"object","properties":{"issn":{"type":"string"},"standards-body":{"type":"string"},"issue":{"type":"string"},"key":{"type":"string"},"series-title":{"type":"string"},"isbn-type":{"type":"string"},"doi-asserted-by":{"type":"string"},"first-page":{"type":"string"},"type":{"type":"string"},"isbn":{"type":"string"},"doi":{"type":"string"},"component":{"type":"string"},"article-title":{"type":"string"},"volume-title":{"type":"string"},"volume":{"type":"string"},"author":{"type":"string"},"standard-designator":{"type":"string"},"year":{"type":"string"},"unstructured":{"type":"string"},"edition":{"type":"string"},"journal-title":{"type":"string"},"issn-type":{"type":"string"}},"additionalProperties":false},"Resources":{"type":"object","properties":{"primary":{"$ref":"#\/definitions\/PrimaryResource"},"secondary":{"type":"array","items":{"$ref":"#\/definitions\/SecondaryResource"}}},"additionalProperties":false,"required":["primary"]},"SecondaryResource":{"type":"object","properties":{"URL":{"type":"string"},"label":{"type":"string"}},"additionalProperties":false,"required":["URL","label"]},"StatusDescription":{"type":"object","properties":{"language":{"type":"string"},"description":{"type":"string"}},"additionalProperties":false},"Type":{"type":"object","properties":{"id":{"type":"string"},"label":{"type":"string"}},"additionalProperties":false,"required":["id","label"]},"TypeMessage":{"type":"object","properties":{"status":{"type":"string"},"message-type":{"type":"string","pattern":"type"},"message-version":{"type":"string"},"message":{"$ref":"#\/definitions\/Type"}},"additionalProperties":false,"required":["status","message-type","message-version","message"]},"Types":{"type":"object","properties":{"items-per-page":{"type":"integer","format":"int64"},"query":{"$ref":"#\/definitions\/Query"},"total-results":{"type":"integer","format":"int64"},"items":{"type":"array","items":{"$ref":"#\/definitions\/Type"}}},"additionalProperties":false,"required":["items-per-page","query","total-results","items"]},"TypesMessage":{"type":"object","properties":{"status":{"type":"string"},"message-type":{"type":"string","pattern":"type-list"},"message-version":{"type":"string"},"message":{"$ref":"#\/definitions\/Types"}},"additionalProperties":false,"required":["status","message-type","message-version","message"]},"VersionInfo":{"type":"object","properties":{"version":{"type":"string"},"language":{"type":"string"},"version-description":{"type":"array","items":{"$ref":"#\/definitions\/VersionInfoDescription"}}},"additionalProperties":false,"required":["version"]},"VersionInfoDescription":{"type":"object","properties":{"language":{"type":"string"},"description":{"type":"string"}},"additionalProperties":false},"Work":{"type":"object","properties":{"institution":{"type":"array","items":{"$ref":"#\/definitions\/WorkInstitution"}},"indexed":{"$ref":"#\/definitions\/DateAndVersion"},"posted":{"$ref":"#\/definitions\/DateParts"},"publisher-location":{"type":"string"},"update-to":{"type":"array","items":{"$ref":"#\/definitions\/WorkUpdate"}},"standards-body":{"type":"array","items":{"$ref":"#\/definitions\/WorkStandardsBody"}},"edition-number":{"type":"string"},"group-title":{"type":"array","items":{"type":"string"}},"reference-count":{"type":"integer","format":"int64"},"publisher":{"type":"string"},"issue":{"type":"string"},"isbn-type":{"type":"array","items":{"$ref":"#\/definitions\/WorkISSNType"}},"license":{"type":"array","items":{"$ref":"#\/definitions\/WorkLicense"}},"funder":{"type":"array","items":{"$ref":"#\/definitions\/WorkFunder"}},"content-domain":{"$ref":"#\/definitions\/WorkDomain"},"chair":{"type":"array","items":{"$ref":"#\/definitions\/Author"}},"short-container-title":{"type":"string"},"accepted":{"$ref":"#\/definitions\/DateParts"},"content-updated":{"$ref":"#\/definitions\/DateParts"},"published-print":{"$ref":"#\/definitions\/DateParts"},"abstract":{"type":"string"},"DOI":{"description":"The DOI identifier associated with the work","type":"string"},"type":{"type":"string"},"created":{"$ref":"#\/definitions\/Date"},"approved":{"$ref":"#\/definitions\/DateParts"},"page":{"type":"string"},"update-policy":{"type":"string"},"source":{"type":"string"},"is-referenced-by-count":{"type":"integer","format":"int64"},"title":{"type":"array","items":{"type":"string"}},"prefix":{"type":"string"},"volume":{"type":"string"},"clinical-trial-number":{"type":"array","items":{"$ref":"#\/definitions\/WorkClinicalTrial"}},"author":{"type":"array","items":{"$ref":"#\/definitions\/Author"}},"member":{"type":"string"},"content-created":{"$ref":"#\/definitions\/DateParts"},"published-online":{"$ref":"#\/definitions\/DateParts"},"reference":{"type":"array","items":{"$ref":"#\/definitions\/Reference"}},"updated-by":{"type":"array","items":{"$ref":"#\/definitions\/WorkUpdate"}},"container-title":{"type":"array","items":{"type":"string"}},"review":{"$ref":"#\/definitions\/WorkReview"},"project":{"$ref":"#\/definitions\/WorkProject"},"original-title":{"type":"array","items":{"type":"string"}},"status":{"$ref":"#\/definitions\/PostedContentStatus"},"language":{"type":"string"},"link":{"type":"array","items":{"$ref":"#\/definitions\/WorkLink"}},"deposited":{"$ref":"#\/definitions\/Date"},"score":{"type":"integer","format":"int64"},"degree":{"type":"string"},"resource":{"$ref":"#\/definitions\/Resources"},"subtitle":{"type":"array","items":{"type":"string"}},"translator":{"type":"array","items":{"$ref":"#\/definitions\/Author"}},"free-to-read":{"$ref":"#\/definitions\/WorkFreeToRead"},"editor":{"type":"array","items":{"$ref":"#\/definitions\/Author"}},"proceedings-subject":{"type":"string"},"component-number":{"type":"string"},"short-title":{"type":"array","items":{"type":"string"}},"issued":{"$ref":"#\/definitions\/DateParts"},"ISBN":{"type":"array","items":{"type":"string"}},"references-count":{"type":"integer","format":"int64"},"part-number":{"type":"string"},"issue-title":{"type":"array","items":{"type":"string"}},"journal-issue":{"$ref":"#\/definitions\/WorkJournalIssue"},"alternative-id":{"type":"array","items":{"type":"string"}},"version":{"$ref":"#\/definitions\/VersionInfo"},"URL":{"type":"string"},"archive":{"type":"array","items":{"type":"string"}},"relation":{"$ref":"#\/definitions\/WorkRelation"},"ISSN":{"type":"array","items":{"type":"string"}},"issn-type":{"type":"array","items":{"$ref":"#\/definitions\/WorkISSNType"}},"subject":{"type":"array","items":{"type":"string"}},"published-other":{"$ref":"#\/definitions\/DateParts"},"published":{"$ref":"#\/definitions\/DateParts"},"assertion":{"type":"array","items":{"$ref":"#\/definitions\/WorkAssertion"}},"subtype":{"type":"string"},"article-number":{"type":"string"}},"additionalProperties":false,"required":["indexed","publisher","DOI","type","created","source","prefix","member","deposited","score","resource","issued","URL"]},"WorkAssertion":{"type":"object","properties":{"group":{"$ref":"#\/definitions\/WorkAssertionGroup"},"explanation":{"$ref":"#\/definitions\/WorkAssertionExplanation"},"name":{"type":"string"},"value":{"type":"string"},"URL":{"type":"string"},"order":{"type":"integer","format":"int64"}},"additionalProperties":false,"required":["name"]},"WorkAssertionExplanation":{"type":"object","properties":{"URL":{"type":"string"}},"additionalProperties":false,"required":["URL"]},"WorkAssertionGroup":{"type":"object","properties":{"name":{"type":"string"},"label":{"type":"string"}},"additionalProperties":false,"required":["name"]},"WorkClinicalTrial":{"type":"object","properties":{"clinical-trial-number":{"type":"string"},"registry":{"type":"string"},"type":{"type":"string"}},"additionalProperties":false,"required":["clinical-trial-number","registry"]},"WorkDomain":{"type":"object","properties":{"domain":{"type":"array","items":{"type":"string"}},"crossmark-restriction":{"type":"boolean"}},"additionalProperties":false,"required":["domain"]},"WorkFreeToRead":{"type":"object","properties":{"start-date":{"$ref":"#\/definitions\/DateParts"},"end-date":{"$ref":"#\/definitions\/DateParts"}},"additionalProperties":false},"WorkFunder":{"type":"object","properties":{"name":{"type":"string"},"DOI":{"type":"string"},"doi-asserted-by":{"type":"string"},"award":{"type":"array","items":{"type":"string"}},"id":{"type":"array","items":{"$ref":"#\/definitions\/FunderIdentifier"}}},"additionalProperties":false},"WorkISSNType":{"type":"object","properties":{"type":{"type":"string"},"value":{"type":"array","items":{"type":"string"}}},"additionalProperties":false,"required":["type","value"]},"WorkInstitution":{"type":"object","properties":{"name":{"type":"string"},"place":{"type":"array","items":{"type":"string"}},"department":{"type":"array","items":{"type":"string"}},"acronym":{"type":"array","items":{"type":"string"}}},"additionalProperties":false,"required":["name"]},"WorkJournalIssue":{"type":"object","properties":{"issue":{"type":"string"}},"additionalProperties":false,"required":["issue"]},"WorkLicense":{"type":"object","properties":{"URL":{"type":"string"},"start":{"$ref":"#\/definitions\/Date"},"delay-in-days":{"type":"integer","format":"int64"},"content-version":{"type":"string"}},"additionalProperties":false,"required":["URL","delay-in-days","content-version"]},"WorkLink":{"type":"object","properties":{"URL":{"type":"string"},"content-type":{"type":"string"},"content-version":{"type":"string"},"intended-application":{"type":"string"}},"additionalProperties":false,"required":["URL","content-type","content-version","intended-application"]},"WorkMessage":{"type":"object","properties":{"status":{"type":"string"},"message-type":{"type":"string","pattern":"work"},"message-version":{"type":"string"},"message":{"$ref":"#\/definitions\/Work"}},"additionalProperties":false,"required":["status","message-type","message-version","message"]},"WorkProject":{"type":"object","properties":{"award-end":{"type":"array","items":{"$ref":"#\/definitions\/DateParts"}},"award-planned-start":{"type":"array","items":{"$ref":"#\/definitions\/DateParts"}},"award-start":{"type":"array","items":{"$ref":"#\/definitions\/DateParts"}},"lead-investigator":{"type":"array","items":{"$ref":"#\/definitions\/Investigator"}},"award-planned-end":{"type":"array","items":{"$ref":"#\/definitions\/DateParts"}},"investigator":{"type":"array","items":{"$ref":"#\/definitions\/Investigator"}},"funding":{"type":"array","items":{"$ref":"#\/definitions\/Funding"}},"project-title":{"type":"array","items":{"$ref":"#\/definitions\/ProjectTitle"}},"award-amount":{"$ref":"#\/definitions\/AwardAmount"},"co-lead-investigator":{"type":"array","items":{"$ref":"#\/definitions\/Investigator"}}},"additionalProperties":false,"required":["project-title"]},"WorkRelation":{"type":"object","additionalProperties":{"$ref":"#\/definitions\/WorkRelationObject"}},"WorkRelationObject":{"type":"object","properties":{"id-type":{"type":"string"},"id":{"type":"string"},"asserted-by":{"type":"string"}},"additionalProperties":false,"required":["id-type","id","asserted-by"]},"WorkReview":{"type":"object","properties":{"type":{"type":"string"},"running-number":{"type":"string"},"revision-round":{"type":"string"},"stage":{"type":"string"},"competing-interest-statement":{"type":"string"},"recommendation":{"type":"string"},"language":{"type":"string"}},"additionalProperties":false},"WorkStandardsBody":{"type":"object","properties":{"name":{"type":"string"},"acronym":{"type":"array","items":{"type":"string"}}},"additionalProperties":false},"WorkUpdate":{"type":"object","properties":{"label":{"type":"string"},"DOI":{"type":"string"},"type":{"type":"string"},"source":{"type":"string"},"updated":{"$ref":"#\/definitions\/Date"}},"additionalProperties":false,"required":["label","DOI","type","source","updated"]},"Works":{"type":"object","properties":{"items-per-page":{"type":"integer","format":"int64"},"query":{"$ref":"#\/definitions\/Query"},"total-results":{"type":"integer","format":"int64"},"next-cursor":{"description":"Used to navigate to the next page of results when using cursor deep paging","type":"string"},"items":{"type":"array","items":{"$ref":"#\/definitions\/Work"}}},"additionalProperties":false,"required":["items-per-page","query","total-results","items"]},"WorksMessage":{"type":"object","properties":{"status":{"type":"string"},"message-type":{"type":"string","pattern":"work-list"},"message-version":{"type":"string"},"message":{"$ref":"#\/definitions\/Works"}},"additionalProperties":false,"required":["status","message-type","message-version","message"]}}}